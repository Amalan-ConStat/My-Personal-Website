<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Consulting Statistician on Consulting Statistician</title>
    <link>/</link>
    <description>Recent content in Consulting Statistician on Consulting Statistician</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0530</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Week 24: Meteorite Data</title>
      <link>/post/tidytuesday2019/week24/week24/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week24/week24/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#meteorites-over-the-year&#34;&gt;Meteorites over the Year&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#meteorites-and-classes&#34;&gt;Meteorites and Classes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meteorites &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-11/meteorites.csv&amp;quot;)

library(tidyverse)
library(gganimate)
library(maps)
library(ggthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;meteorites-over-the-year&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Meteorites over the Year&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meteorites_rm&amp;lt;-remove_missing(meteorites)

world &amp;lt;- ggplot() + theme_map()+
         borders(&amp;quot;world&amp;quot;, colour = &amp;quot;#353535&amp;quot;, fill = &amp;quot;#74e04a&amp;quot;) 

plot1&amp;lt;-world+geom_point(data=meteorites_rm,x=meteorites_rm$long,y=meteorites_rm$lat,
                        color=&amp;quot;#e20e06&amp;quot;)+
             transition_states(meteorites_rm$year,transition_length = 1,state_length = 1)+
             theme(plot.title = element_text(color = &amp;quot;black&amp;quot;, 
                                           size = 15, 
                                           face = &amp;quot;bold&amp;quot;),
                   panel.background = element_rect(fill = &amp;quot;#5e8bed&amp;quot;)) +
             ggtitle(&amp;quot;Meteors Falling from the sky by Name Type&amp;quot;,subtitle = &amp;quot;Year:{closest_state}&amp;quot;)

animate(plot1,nframes=253,fps=1,detail = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week24/index_files/figure-html/meteorites%20over%20the%20year-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;meteorites-and-classes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Meteorites and Classes&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test&amp;lt;-meteorites%&amp;gt;%
          subset(year &amp;gt;= 2000 &amp;amp; year &amp;lt; 2101) %&amp;gt;%
          group_by(year,class) %&amp;gt;%
          count(class) %&amp;gt;%
          group_by(year)%&amp;gt;%     
          mutate(rank=rank(-n),
                 #value_rel= n/n[rank==1],
                 value_lbl=paste0(&amp;quot;&amp;quot;,n)) %&amp;gt;%
          group_by(class) %&amp;gt;%
          filter(rank &amp;lt;=5) %&amp;gt;%
          ungroup()

plot3&amp;lt;-ggplot(test, aes(rank, group = class, 
              fill = as.factor(class), color = as.factor(class))) +
       geom_tile(aes(y = n/2,height = n,width = 0.9), alpha = 0.8, color = NA) +
       geom_text(aes(y = 0, label = paste(class, &amp;quot; &amp;quot;)), vjust = 0.2, hjust = 1) +
       geom_text(aes(y=n,label = value_lbl, hjust=0)) +
       coord_flip(clip = &amp;quot;off&amp;quot;, expand = FALSE) +
       scale_y_continuous(labels = scales::comma) +
       scale_x_reverse() +
       guides(color = FALSE, fill = FALSE) +
       theme(axis.line=element_blank(),
             axis.text.x=element_blank(),
             axis.text.y=element_blank(),
             axis.ticks=element_blank(),
             axis.title.x=element_blank(),
             axis.title.y=element_blank(),
             legend.position=&amp;quot;none&amp;quot;,
             panel.background=element_blank(),
             panel.border=element_blank(),
             panel.grid.major=element_blank(),
             panel.grid.minor=element_blank(),
             panel.grid.major.x = element_line( size=.1, color=&amp;quot;grey&amp;quot; ),
             panel.grid.minor.x = element_line( size=.1, color=&amp;quot;grey&amp;quot; ),
             plot.title=element_text(size=25, hjust=0.5, face=&amp;quot;bold&amp;quot;, colour=&amp;quot;grey&amp;quot;, vjust=-1),
             plot.subtitle=element_text(size=18, hjust=0.5, face=&amp;quot;italic&amp;quot;, color=&amp;quot;grey&amp;quot;),
             plot.caption =element_text(size=8, hjust=0.5, face=&amp;quot;italic&amp;quot;, color=&amp;quot;grey&amp;quot;),
             plot.background=element_blank(),
             plot.margin = margin(2,2, 2, 4, &amp;quot;cm&amp;quot;)) +
       transition_states(year, transition_length = 3, state_length = 2) +
  view_follow(fixed_x = TRUE)  +
  labs(title = &amp;#39;Meteorites Classes by Year: {closest_state}&amp;#39;,  
       subtitle  =  &amp;quot;Top 5 Classes&amp;quot;) 

# For GIF

animate(plot3, nframes=200, fps = 20) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week24/index_files/figure-html/meteorites%20and%20classes-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test %&amp;gt;%
     ggplot(.,aes(x=class,y=n,label=rank,fill=class))+geom_col()+
     facet_wrap(~factor(year))+geom_text(vjust=-0.5)+
     geom_text(aes(label=n),vjust=1)+
     ggtitle(&amp;quot;Meteors class count from 2000 to 2013&amp;quot;,subtitle = &amp;quot;Top 5 Ranks&amp;quot;)+
     scale_y_continuous(expand = c(0,75))+theme_dark()+
     theme(axis.text.x = element_text(angle = 45))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week24/index_files/figure-html/meteorites%20and%20classes%20jitter%20plot-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 23 : Ramen Ratings</title>
      <link>/post/tidytuesday2019/week23/week23/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week23/week23/</guid>
      <description>&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-04/ramen_ratings.csv&amp;quot;)

library(tidyverse)
library(gganimate)
library(ggthemes)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have not posted regarding #TidyTuesday in a while, so here it is. It is all
about manipulating the dataset and generating necessary plots.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-06-04&#34;&gt;Data&lt;/a&gt;
&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week23&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Just an animated plot where for the top 10 brands how stars change with style and country.  Ramen is with highest ratings in Japan, Taiwan and South Korea. &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; GitHub Code : &lt;a href=&#34;https://t.co/lPQrYK8aoN&#34;&gt;https://t.co/lPQrYK8aoN&lt;/a&gt; &lt;a href=&#34;https://t.co/IQ3okDflYK&#34;&gt;pic.twitter.com/IQ3okDflYK&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1136303490978988033?ref_src=twsrc%5Etfw&#34;&gt;June 5, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  count(stars,sort = TRUE) %&amp;gt;%
ggplot(.,aes(fct_inorder(as_factor(stars)),n,label=n))+
      geom_col(fill=blues9[5])+
      geom_text(vjust=-0.5,color=blues9[9])+ylab(&amp;quot;Count / Frequency&amp;quot;)+
      xlab(&amp;quot;Stars&amp;quot;)+ggtitle(&amp;quot;Stars Distribution&amp;quot;)+
      theme_economist()+
      theme(axis.text.x = element_text(angle = 45))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Stars%20all-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;brand-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Brand versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(brand,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(brand),y=n,label=n))+geom_col(fill=blues9[5])+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Brand&amp;quot;)+
      geom_text(hjust=-0.5,color=blues9[9])+
      ggtitle(&amp;quot;Brands Distribution by Stars&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Brands-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt; 2)%&amp;gt;%
  count(brand,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(brand),y=n,label=n))+geom_col(fill=blues9[5])+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Brand&amp;quot;)+
      geom_text(hjust=-0.5,color=blues9[9])+
      ggtitle(&amp;quot;Brands Distribution by Stars&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%202%20or%20below%202%20for%20Brands-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;style-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Style versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(style,sort = TRUE) %&amp;gt;%
  top_n(10) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(style),y=n,label=n))+geom_col(fill=blues9[5])+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Style&amp;quot;)+
      geom_text(hjust=-0.5,color=blues9[9])+
      ggtitle(&amp;quot;Styles Distribution by Stars&amp;quot;,
              subtitle = &amp;quot;Top 10&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Style-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt; 2)%&amp;gt;%
  count(style,sort = TRUE) %&amp;gt;%
  top_n(5) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(style),y=n,label=n))+geom_col(fill=blues9[5])+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Style&amp;quot;)+
      geom_text(hjust=-0.5,color=blues9[9])+
      ggtitle(&amp;quot;Styles Distribution by Stars&amp;quot;,
              subtitle = &amp;quot;Top 5&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%202%20or%20below%202%20for%20Style-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;country-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Country versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(country),y=n,label=n))+geom_col(fill=blues9[5])+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Country&amp;quot;)+
      geom_text(hjust=-0.5,color=blues9[9])+
      ggtitle(&amp;quot;Countries Distribution by Stars&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt; 2)%&amp;gt;%
  count(country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(country),y=n,label=n))+geom_col(fill=blues9[5])+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Country&amp;quot;)+
      geom_text(hjust=-0.5,color=blues9[9])+
      ggtitle(&amp;quot;Countries Distribution by Stars&amp;quot;,
              subtitle = &amp;quot;Top 20&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%20below%202%20for%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;brand-and-style-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Brand and Style versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(brand,style,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(brand),y=n,label=n,fill=style))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Brand&amp;quot;)+
      geom_text(hjust=-0.25,color=blues9[9],
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Brand Distribution by Stars but for Styles&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Brand%20and%20Style-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt;2)%&amp;gt;%
  count(brand,style,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(brand),y=n,label=n,fill=style))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Brand&amp;quot;)+
      geom_text(hjust=-0.25,color=blues9[9],
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Brand Distribution by Stars but for Styles&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%20below%202%20for%20Brand%20and%20Style-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;brand-and-country-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Brand and Country versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(brand,country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(brand),y=n,label=n,fill=country))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Brand&amp;quot;)+
      geom_text(hjust=-0.25,color=blues9[9],
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Brand Distribution by Stars but for Country&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Brand%20and%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt;2)%&amp;gt;%
  count(brand,country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(brand),y=n,label=n,fill=country))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Brand&amp;quot;)+
      geom_text(hjust=-0.25,color=blues9[9],
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Brand Distribution by Stars but for Country&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%20below%202%20for%20Brand%20and%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;style-and-country-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Style and Country versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(style,country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(country),y=n,label=n,fill=style))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Country&amp;quot;)+
      geom_text(hjust=-0.25,color=blues9[9],
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Style Distribution by Stars but for Country&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Style%20and%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt;2)%&amp;gt;%
  count(style,country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=fct_inorder(country),y=n,label=n,fill=style))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Country&amp;quot;)+
      geom_text(hjust=-0.25,color=blues9[9],
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Style Distribution by Stars but for Country&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%20below%202%20for%20Style%20and%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;brand-style-and-country-versus-stars&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Brand, Style and Country versus Stars&lt;/h2&gt;
&lt;div id=&#34;rating-where-stars-is-4-or-above-4-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is 4 or above 4&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;gt;=4)%&amp;gt;%
  count(brand,style,country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=country,y=n,label=n,fill=style))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+facet_wrap(~brand)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Country&amp;quot;)+
      geom_text(hjust=-0.05,color=blues9[9],size=3.5,
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Style Distribution by Stars but for Country&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%204%20or%20above%204%20for%20Brand,Style%20and%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rating-where-stars-is-below-2-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rating where stars is below 2&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ramen_ratings %&amp;gt;%
  subset(stars &amp;lt;2)%&amp;gt;%
  count(brand,style,country,sort = TRUE) %&amp;gt;%
  top_n(25) %&amp;gt;%
ggplot(.,aes(x=country,y=n,label=n,fill=style))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+facet_wrap(~brand)+
      ylab(&amp;quot;Count / Frequency&amp;quot;)+xlab(&amp;quot;Country&amp;quot;)+
      geom_text(hjust=-0.05,color=blues9[9],size=3.5,
                position = position_dodge(width = 1))+
      ggtitle(&amp;quot;Style Distribution by Stars but for Country&amp;quot;,
              subtitle = &amp;quot;Top 25&amp;quot;)+
      theme_economist()+ coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Rating%20stars%20of%20below%202%20for%20Brand,Style%20and%20Country-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;special-plot&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Special Plot&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#summarytools::dfSummary(ramen_ratings)

spe_plot&amp;lt;-ramen_ratings %&amp;gt;%
          subset(brand==&amp;quot;Nissin&amp;quot; | brand==&amp;quot;Nongshim&amp;quot; |
                 brand==&amp;quot;Maruchan&amp;quot; | brand==&amp;quot;Myojo&amp;quot; |
                 brand==&amp;quot;Samyang Foods&amp;quot; | brand==&amp;quot;Mama&amp;quot;|
                 brand==&amp;quot;Paldo&amp;quot; | brand==&amp;quot;Indomie&amp;quot;|
                 brand==&amp;quot;Ottogi&amp;quot; | brand==&amp;quot;Sapporo Ichiban&amp;quot;) %&amp;gt;%
                 remove_missing() %&amp;gt;%
          ggplot(.,aes(brand,as_factor(stars),color=style))+
          geom_jitter()+theme_economist()+
          xlab(&amp;quot;Brand&amp;quot;)+ylab(&amp;quot;Stars&amp;quot;)+
          ggtitle(&amp;quot;How Stars change for Brands&amp;quot;,subtitle=&amp;quot;{closest_state}&amp;quot;)+
          transition_states(country,transition_length = 1,state_length = 2)+
          enter_fade()+exit_fade()

animate(spe_plot,nframes=44,fps=2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week23/index_files/figure-html/Special%20Plot-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CRAN-fitODBOD: fitting Over Dispersed Binomial Outcome Data</title>
      <link>/publication/fitodbod-cran/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/fitodbod-cran/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GitHub-fitODBOD: fitting Over Dispersed Binomial Outcome Data</title>
      <link>/publication/fitodbod-github/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/fitodbod-github/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Website-fitODBOD: fitting Over Dispersed Binomial Outcome Data</title>
      <link>/publication/fitodbod-website/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/fitodbod-website/</guid>
      <description></description>
    </item>
    
    <item>
      <title>South Park Text Analytics Shiny App</title>
      <link>/post/southpark_rshiny/southpark_rshiny/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/southpark_rshiny/southpark_rshiny/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#shiny-app-of-text-analytics-for-south-park-tv-show.&#34;&gt;Shiny App of Text Analytics for South Park Tv show.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#no-inputs-needed-to-generate-plots-or-results&#34;&gt;No Inputs needed to generate Plots or Results&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#trivia-sub-tab&#34;&gt;Trivia Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lines-sub-tab&#34;&gt;Lines Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#words-sub-tab&#34;&gt;Words Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#special-words-sub-tab&#34;&gt;Special Words Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ratings-and-votes-from-imdb-sub-tab&#34;&gt;Ratings and Votes from IMDB Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sentiment-analysis-sub-tab&#34;&gt;Sentiment Analysis Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bigram-and-trigram-analysis-sub-tab&#34;&gt;Bigram and Trigram Analysis Sub Tab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#inputs-needed-from-the-user-to-generate-plots-and-results&#34;&gt;Inputs needed from the user to generate Plots and Results&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#compare-two-seasons-tab.&#34;&gt;Compare Two Seasons Tab.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compare-two-characters-tab.&#34;&gt;Compare Two Characters Tab.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compare-two-characters-but-same-season-tab.&#34;&gt;Compare Two Characters but Same Season Tab.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compare-two-seasons-but-same-character-tab.&#34;&gt;Compare Two Seasons but Same Character Tab.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#about-the-author-tab.&#34;&gt;About the Author Tab.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/SouthPark-Rshiny&#34;&gt;GitHub Code&lt;/a&gt; &lt;a href=&#34;https://amalan-con-stat.shinyapps.io/southparktextanalytics/&#34;&gt;Link for the Rshiny App&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;shiny-app-of-text-analytics-for-south-park-tv-show.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Shiny App of Text Analytics for South Park Tv show.&lt;/h1&gt;
&lt;p&gt;R Shiny Apps are very popular, that is why I developed my first Shiny App based on Olympic Data from Kaggle. It will be updated after year 2020 Olympic games. Here is the &lt;a href=&#34;https://amalan-con-stat.shinyapps.io/olympic/&#34;&gt;Link.&lt;/a&gt; After this I now developed something grand-eloquent, which is for the long running TV series South Park.&lt;/p&gt;
&lt;p&gt;This show has 22 seasons aired until now. I was able to find the data for scripts of all the aired episodes until season 18 from the GitHub &lt;a href=&#34;https://github.com/walkerkq/textmining_southpark&#34;&gt;repository&lt;/a&gt; of &lt;a href=&#34;http://kaylinpavlik.com/&#34;&gt;Kaylin Pavlik&lt;/a&gt; While this was more than enough information I was focusing on getting data for the rest of the seasons(19,20,21,22). For this task I briefly studied web scraping and thankfully it was helpful in obtaining that data with a little amount of knowledge of string manipulation.&lt;/p&gt;
&lt;p&gt;Finally I was able to create one massive data set which would have all the script details from season 1 to season 22 for all episodes with who spoke them and what did these Characters say without unnecessary background interpretations or scenario descriptions.&lt;/p&gt;
&lt;p&gt;But this was not the end, because I was lucky enough to find the R package in GitHub &lt;a href=&#34;https://github.com/pdrhlik/southparkr&#34;&gt;southparkr&lt;/a&gt; of &lt;a href=&#34;https://patrio.blog&#34;&gt;Patrik Drhlik.&lt;/a&gt; This package included information from the IMDB website regarding Episode Name, Rating and Votes. Further it also included similar information regarding the scripts but more thoroughly until recent seasons. Which gave me an idea to use this package for data regarding the Rating and votes from IMDB because I already had the information for scripts.&lt;/p&gt;
&lt;div id=&#34;no-inputs-needed-to-generate-plots-or-results&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;No Inputs needed to generate Plots or Results&lt;/h2&gt;
&lt;p&gt;Plots generated here are to summarize so far how the South park season 1 to 22 has changed. In terms of Swear words, stop words, all words, sentiment and much more. If we focus on sentiment analysis it is more clear when you read documents related to &lt;a href=&#34;http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010&#34;&gt;AFINN&lt;/a&gt;, &lt;a href=&#34;https://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html&#34;&gt;bing&lt;/a&gt; and &lt;a href=&#34;http://saifmohammad.com/WebPages/NRC-Emotion-Lexicon.htm&#34;&gt;nrc&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;trivia-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Trivia Sub Tab&lt;/h3&gt;
&lt;p&gt;This tab includes information in plots mainly generated by plotly with some memes from South Park. So patiently wait until they load, you can scroll through the page and read stuff.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lines-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Lines Sub Tab&lt;/h3&gt;
&lt;p&gt;Summarized information for number of lines with relative to seasons, characters and episodes will be plotted here.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;words-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Words Sub Tab&lt;/h3&gt;
&lt;p&gt;Summarized information for number of words with relative to seasons, characters and episodes will be plotted here.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;special-words-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Special Words Sub Tab&lt;/h3&gt;
&lt;p&gt;Summarized information for words, words without stop words, swear words with relative to seasons, characters and episodes will be plotted here.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ratings-and-votes-from-imdb-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Ratings and Votes from IMDB Sub Tab&lt;/h3&gt;
&lt;p&gt;Data from southparkr package related to ratings and votes of IMDB will be used to generate plots in this tab. There are two animated plots and it might take some time to generate also therefore patiently wait.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sentiment-analysis-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Sentiment Analysis Sub Tab&lt;/h3&gt;
&lt;p&gt;As above mentioned here also there will be plots related sentiment analysis. Which are related to AFINN, bing and nrc techniques.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bigram-and-trigram-analysis-sub-tab&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Bigram and Trigram Analysis Sub Tab&lt;/h3&gt;
&lt;p&gt;This is something rare to be useful and time consuming, but will still generate plots. Therefore patiently wait until the plots are done to be view-able.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;inputs-needed-from-the-user-to-generate-plots-and-results&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Inputs needed from the user to generate Plots and Results&lt;/h2&gt;
&lt;p&gt;Inputs from user where they can choose their own will be used to generate plots under these several tabs. Below generated are only plots but nothing more. These comparisons are mainly about Most number of lines, Most number of words, Most number of words without stop words, Swear words and sentiment analysis.&lt;/p&gt;
&lt;p&gt;Sentiment Analysis is related to AFINN, bing and nrc techniques. Further, nrc has subgroups which are related to 10 different emotions. While AFINN and bing has only two emotions which are positive and negative.&lt;/p&gt;
&lt;div id=&#34;compare-two-seasons-tab.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Compare Two Seasons Tab.&lt;/h3&gt;
&lt;p&gt;Two seasons of the users choice will be used to generate plots. It will take some time so patiently wait until they are plotted. Where all the users who were from those two seasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;compare-two-characters-tab.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Compare Two Characters Tab.&lt;/h3&gt;
&lt;p&gt;Two Characters of the users choice will be used to generate plots. It will take some time so patiently wait until they are plotted. All the seasons which they were active.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;compare-two-characters-but-same-season-tab.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Compare Two Characters but Same Season Tab.&lt;/h3&gt;
&lt;p&gt;Two Characters of the Same Season will be used to generate plots. It will take some time so patiently wait until they are plotted. Here, we will not consider characters which were active in this particular season, rather all Characters which were active throughout all seasons. Therefore sometimes their might not be meaningful plots.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;compare-two-seasons-but-same-character-tab.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Compare Two Seasons but Same Character Tab.&lt;/h3&gt;
&lt;p&gt;Two Seasons of the Same Character will be used to generate plots. It will take some time so patiently wait until they are plotted. Here also we are not considering if the chosen character by the user is active in the chosen two seasons of choice. Therefore sometimes we might not generate meaningful plots.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;about-the-author-tab.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;About the Author Tab.&lt;/h2&gt;
&lt;p&gt;If you Click this, it will automatically open a tab which will lead you to my personal website, which is this one.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Prevalence of antenatal depression in South Asia: a systematic review and meta-analysis.</title>
      <link>/publication/southasia_antenatal_depression/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/southasia_antenatal_depression/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Week 15 : Tennis Tournaments</title>
      <link>/post/tidytuesday2019/week15/week15/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week15/week15/</guid>
      <description>&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
library(tidyverse)
library(lubridate)
library(gganimate)

player_dob &amp;lt;- read_csv(&amp;quot;player_dob.csv&amp;quot;, 
                        col_types = cols(date_of_birth = col_date(format = &amp;quot;%Y-%m-%d&amp;quot;), 
                        date_of_first_title = col_date(format = &amp;quot;%Y-%m-%d&amp;quot;)))
grand_slams &amp;lt;- read_csv(&amp;quot;grand_slams.csv&amp;quot;, 
                        col_types = cols(gender = col_factor(levels = c(&amp;quot;Female&amp;quot;,&amp;quot;Male&amp;quot;)), 
                        rolling_win_count = col_integer(), 
                        tournament_date = col_date(format = &amp;quot;%Y-%m-%d&amp;quot;), 
                        year = col_integer()))
grand_slam_timeline &amp;lt;- read_csv(&amp;quot;grand_slam_timeline.csv&amp;quot;, 
                                col_types = cols(gender = col_factor(levels = c(&amp;quot;Female&amp;quot;,&amp;quot;Male&amp;quot;)), 
                                year = col_integer()))&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Winning the Wimbledon as your first grand slam looks very thin than other three tournaments. Also among the top 10 most grand slam winners Roger Federer and  Chris Evert have reached semi-finals only a lot of times. .code : &lt;a href=&#34;https://t.co/tOify2Npwd&#34;&gt;https://t.co/tOify2Npwd&lt;/a&gt;  &lt;a href=&#34;https://twitter.com/hashtag/tidytuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidytuesday&lt;/a&gt; &lt;a href=&#34;https://t.co/9Vfa3CXmne&#34;&gt;pic.twitter.com/9Vfa3CXmne&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1115652786862153729?ref_src=twsrc%5Etfw&#34;&gt;April 9, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week15&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;player-information&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Player Information&lt;/h1&gt;
&lt;div id=&#34;decade-of-birth-vs-first-grand-slam-title-won&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Decade of Birth vs First Grand Slam Title Won&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;player_dob %&amp;gt;% 
   remove_missing() %&amp;gt;%
   mutate(grand_slam=recode_factor(grand_slam,
                                  &amp;#39;Wimbledon&amp;#39;=&amp;quot;Wimbledon&amp;quot;,
                                  &amp;#39;US Open&amp;#39;=&amp;quot;US Open&amp;quot;,
                                  &amp;#39;French Open&amp;#39;=&amp;quot;French Open&amp;quot;,
                                  &amp;#39;Australian Open&amp;#39;=&amp;quot;Aus Open&amp;quot;,
                                  &amp;#39;Australian Open (January)&amp;#39;=&amp;quot;Aus Open&amp;quot;,
                                  &amp;#39;Australian Open (Jan)&amp;#39;=&amp;quot;Aus Open&amp;quot;,       
                                  &amp;#39;Australian Open (December)&amp;#39;=&amp;quot;Aus Open&amp;quot;,  
                                  &amp;#39;Australian Open (Jan.)&amp;#39;=&amp;quot;Aus Open&amp;quot;                                  
                                  )) %&amp;gt;%
  mutate(Birth=year(date_of_birth)) %&amp;gt;%
  mutate(Birth=cut(Birth,breaks = c(1929,1939,1949,1959,1969,1979,1989,1999),
                   labels = c(1930,1940,1950,1960,1970,1980,1990)
                   )) %&amp;gt;%
  group_by(Birth,grand_slam) %&amp;gt;%
  count()  %&amp;gt;%
ggplot(.,aes(x=factor(Birth),y=n,fill=grand_slam))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      scale_y_continuous(breaks=seq(1,11,1),labels=seq(1,11,1))+
      labs(fill=&amp;quot;Grand Slam&amp;quot;)+
      geom_text(aes(label=n),position = position_dodge(width = 1),vjust=1)+
      xlab(&amp;quot;Decade of Birth&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;How Decade of Birth and First Win of Grand Slam changes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/decade%20of%20birth%20vs%20first%20title%20won-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;decade-of-birth-vs-first-grand-slam-with-age&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Decade of Birth vs First Grand Slam with Age&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;player_dob %&amp;gt;% 
  remove_missing() %&amp;gt;%
  mutate(grand_slam=recode_factor(grand_slam,
                                  &amp;#39;Wimbledon&amp;#39;=&amp;quot;Wimbledon&amp;quot;,
                                  &amp;#39;US Open&amp;#39;=&amp;quot;US Open&amp;quot;,
                                  &amp;#39;French Open&amp;#39;=&amp;quot;French Open&amp;quot;,
                                  &amp;#39;Australian Open&amp;#39;=&amp;quot;Aus Open&amp;quot;,
                                  &amp;#39;Australian Open (January)&amp;#39;=&amp;quot;Aus Open&amp;quot;,
                                  &amp;#39;Australian Open (Jan)&amp;#39;=&amp;quot;Aus Open&amp;quot;,       
                                  &amp;#39;Australian Open (December)&amp;#39;=&amp;quot;Aus Open&amp;quot;,  
                                  &amp;#39;Australian Open (Jan.)&amp;#39;=&amp;quot;Aus Open&amp;quot;                                  
                                  )) %&amp;gt;%
  mutate(Birth=year(date_of_birth)) %&amp;gt;%
  mutate(Birth=cut(Birth,breaks = c(1929,1939,1949,1959,1969,1979,1989,1999),
                   labels = c(1930,1940,1950,1960,1970,1980,1990)
                   )) %&amp;gt;%
ggplot(.,aes(x=grand_slam,size=round(age/365),y=Birth))+
       geom_jitter()+
       xlab(&amp;quot;Grand Slam&amp;quot;)+ylab(&amp;quot;Decade of Birth&amp;quot;)+
       labs(color=&amp;quot;Age&amp;quot;,size=&amp;quot;Age in Years&amp;quot;)+
       ggtitle(&amp;quot;Birth Decade vs First Grand Slam with Age&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/grand%20slams%20,%20Decade%20of%20Birth%20and%20age-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;grand-slams&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Grand Slams&lt;/h1&gt;
&lt;div id=&#34;gender-vs-grand-slam-with-name&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gender vs Grand Slam with Name&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grand_slams %&amp;gt;%
      group_by(name,gender) %&amp;gt;%
      count(sort = TRUE) %&amp;gt;%
      head(25) %&amp;gt;%
      ggplot(.,aes(x=fct_inorder(name),y=n,
                   fill=gender,label=n))+
      geom_col()+xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      labs(fill=&amp;quot;Gender&amp;quot;)+
      coord_flip()+geom_text(hjust =1)+
      ggtitle(&amp;quot;Who won most with Gender&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/gender%20vs%20grand%20slam%20with%20name-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gender-vs-grand-slam-with-year&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gender vs Grand Slam with Year&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-grand_slams %&amp;gt;%
      ggplot(.,aes(x=name,y=rolling_win_count,
                   shape=gender,color=grand_slam))+
      geom_point()+
      xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Cumulative Count&amp;quot;)+
      labs(color=&amp;quot;Grand Slam&amp;quot;,shape=&amp;quot;Gender&amp;quot;)+
      transition_time(tournament_date)+ease_aes(&amp;quot;linear&amp;quot;)+
      coord_flip()+shadow_mark()+
      ggtitle(&amp;quot;Cumulative progress with Year: {year(frame_time)}&amp;quot;)

animate(p,nframes = 52,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/gender%20vs%20grand%20slam%20with%20year-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;grand-slam-timeline&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Grand Slam Timeline&lt;/h1&gt;
&lt;div id=&#34;top-10-players-and-their-outcomes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Top 10 players and their Outcomes&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top10&amp;lt;-grand_slams %&amp;gt;%
       group_by(name) %&amp;gt;%
       count(sort = TRUE) %&amp;gt;%
       head(10) %&amp;gt;%
       select(name)

grand_slam_timeline %&amp;gt;%
      rename(name=&amp;quot;player&amp;quot;) %&amp;gt;%
      inner_join(top10,&amp;quot;name&amp;quot;) %&amp;gt;%
      group_by(name,outcome) %&amp;gt;%
      count() %&amp;gt;%
ggplot(.,aes(name,n,fill=outcome))+
      geom_col(position=position_dodge(width = 0.95))+
      geom_text(aes(label=n),position = position_dodge(width = 0.95),hjust=1)+
      coord_flip()+labs(fill=&amp;quot;Outcome&amp;quot;)+
      xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;Top 10 Tennis Players and their Outcomes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/Top%2010%20Tennis%20player%20and%20outcomes-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-players-and-tournament-with-outcomes-of-activeness&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Top 10 Players and Tournament with outcomes of activeness&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grand_slam_timeline %&amp;gt;%
      rename(name=&amp;quot;player&amp;quot;) %&amp;gt;%
      inner_join(top10,&amp;quot;name&amp;quot;) %&amp;gt;%
      group_by(tournament,outcome) %&amp;gt;%
      count() %&amp;gt;%
ggplot(.,aes(x=tournament,y=n,fill=outcome))+
      geom_col(position =position_dodge(width=0.95))+
      geom_text(aes(label=n),position =position_dodge(width=0.95),vjust=1)+
      labs(fill=&amp;quot;Outcome&amp;quot;)+
      xlab(&amp;quot;Tournament&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;Tournament perspective of Top 10 Tennis Players and their Outcomes&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/Top%2010%20Tennis%20Players%20and%20outome-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-players-winning-based-on-tournament&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Top 10 Players Winning based on Tournament&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grand_slam_timeline %&amp;gt;%
      rename(name=&amp;quot;player&amp;quot;) %&amp;gt;%
      inner_join(top10,&amp;quot;name&amp;quot;) %&amp;gt;%
      subset(outcome==&amp;quot;Won&amp;quot;) %&amp;gt;%
      group_by(name,tournament) %&amp;gt;%
      count() %&amp;gt;%
ggplot(.,aes(x=name,y=n,fill=tournament))+
      geom_col(position =position_dodge(width=0.95))+
      geom_text(aes(label=n),position =position_dodge(width=0.95),hjust=1)+
      coord_flip()+
      labs(fill=&amp;quot;Tournament&amp;quot;)+
      xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;Winning, Top 10 Tennis Players with related to Tournament&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/Top%2010%20Tennis%20Players%20Winning-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-players-finalist-based-on-tournament&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Top 10 Players Finalist based on Tournament&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grand_slam_timeline %&amp;gt;%
      rename(name=&amp;quot;player&amp;quot;) %&amp;gt;%
      inner_join(top10,&amp;quot;name&amp;quot;) %&amp;gt;%
      subset(outcome==&amp;quot;Finalist&amp;quot;) %&amp;gt;%
      group_by(name,tournament) %&amp;gt;%
      count() %&amp;gt;%
ggplot(.,aes(x=name,y=n,fill=tournament))+
      geom_col(position =position_dodge(width=0.95))+
      geom_text(aes(label=n),position =position_dodge(width=0.95),hjust=1)+
      coord_flip()+
      labs(fill=&amp;quot;Tournament&amp;quot;)+
      xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;Finalist, Top 10 Tennis Players with related to Tournament&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/Top%2010%20Tennis%20Players%20Finalist-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-players-semi-finalist-based-on-tournament&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Top 10 Players Semi-Finalist based on Tournament&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grand_slam_timeline %&amp;gt;%
      rename(name=&amp;quot;player&amp;quot;) %&amp;gt;%
      inner_join(top10,&amp;quot;name&amp;quot;) %&amp;gt;%
      subset(outcome==&amp;quot;Semi-finalist&amp;quot;) %&amp;gt;%
      group_by(name,tournament) %&amp;gt;%
      count() %&amp;gt;%
ggplot(.,aes(x=name,y=n,fill=tournament))+
      geom_col(position =position_dodge(width=0.95))+
      geom_text(aes(label=n),position =position_dodge(width=0.95),hjust=1)+
      coord_flip()+
      labs(fill=&amp;quot;Tournament&amp;quot;)+
      xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;Semi-Finalist, Top 10 Tennis Players with related to Tournament&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/Top%2010%20Tennis%20Players%20Semi-Finalist-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;top-10-players-retired-based-on-tournament&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Top 10 Players Retired based on Tournament&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grand_slam_timeline %&amp;gt;%
      rename(name=&amp;quot;player&amp;quot;) %&amp;gt;%
      inner_join(top10,&amp;quot;name&amp;quot;) %&amp;gt;%
      subset(outcome==&amp;quot;Retired&amp;quot;) %&amp;gt;%
      group_by(name,tournament) %&amp;gt;%
      count() %&amp;gt;%
ggplot(.,aes(x=name,y=n,fill=tournament))+
      geom_col(position =position_dodge(width=0.95))+
      geom_text(aes(label=n),position =position_dodge(width=0.95),hjust=1)+
      coord_flip()+
      labs(fill=&amp;quot;Tournament&amp;quot;)+
      xlab(&amp;quot;Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      ggtitle(&amp;quot;Retired, Top 10 Tennis Players with related to Tournament&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week15/index_files/figure-html/Top%2010%20Tennis%20Players%20Retired-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 14 : Seattle Bikes</title>
      <link>/post/tidytuesday2019/week14/week14/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week14/week14/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#crossing-vs-direction-with-morning-or-evening-for-everyday&#34;&gt;Crossing vs Direction with Morning or Evening for Everyday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#averag-bike-count-in-different-time-laps&#34;&gt;Averag Bike Count in Different Time Laps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#monthly-average-bike-count-for-everyday-with-am-or-pm&#34;&gt;Monthly Average Bike Count for Everyday with AM or PM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#day-by-average-bike-count-for-everyday-with-am-or-pm&#34;&gt;Day by Average Bike Count for Everyday with AM or PM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hourly-average-bike-count-for-every-month-with-am-or-pm&#34;&gt;Hourly Average Bike Count for Every Month with AM or PM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pedestrian-count-with-different-time-laps&#34;&gt;Pedestrian Count With Different Time Laps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#monthly-pedestrian-count-for-everyday-with-am-or-pm-when-true&#34;&gt;Monthly Pedestrian Count for Everyday with AM or PM when TRUE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#monthly-pedestrian-count-for-everyday-with-am-or-pm-when-false&#34;&gt;Monthly Pedestrian Count for Everyday with AM or PM when FALSE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#day-by-pedestrian-count-for-everyday-with-am-or-pm-when-true&#34;&gt;Day by Pedestrian Count for Everyday with AM or PM when TRUE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#day-by-pedestrian-count-for-everyday-with-am-or-pm-when-false&#34;&gt;Day by Pedestrian Count for Everyday with AM or PM when FALSE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hourly-pedestrian-count-for-every-month-with-am-or-pm-when-true&#34;&gt;Hourly Pedestrian Count for Every Month with AM or PM when TRUE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hourly-pedestrian-count-for-every-month-with-am-or-pm-when-false&#34;&gt;Hourly Pedestrian Count for Every Month with AM or PM when FALSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#average-bike-count-with-crossings&#34;&gt;Average Bike Count with Crossings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#average-bike-count-with-directions&#34;&gt;Average Bike Count with Directions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#average-bike-count-with-crossings-by-day&#34;&gt;Average Bike Count with Crossings by Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#average-bike-count-with-directions-by-day&#34;&gt;Average Bike Count with Directions by Day&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(dplyr)
library(gganimate)
library(ggthemr)
library(splitstackshape)
library(lubridate)
library(readr)

bike_traffic &amp;lt;- read_csv(&amp;quot;bike_traffic.csv&amp;quot;)

#bike_traffic &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-02/bike_traffic.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::shortcode(&amp;quot;tweet&amp;quot;,&amp;quot;1113036696214495232&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Burke Gilman Trail, Elliot Bay Trail and MTS Trail are crossings having a higher average count of bikes than others over the Years while plotting them under days of a week.  &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; &lt;a href=&#34;https://t.co/wCj6PLv8DM&#34;&gt;pic.twitter.com/wCj6PLv8DM&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1113036696214495232?ref_src=twsrc%5Etfw&#34;&gt;April 2, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week14&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;crossing-vs-direction-with-morning-or-evening-for-everyday&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Crossing vs Direction with Morning or Evening for Everyday&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      select(DMY,MorE,direction,crossing,bike_count) %&amp;gt;%
ggplot(.,aes(x=direction,y=str_wrap(crossing,15),
             color=MorE,size=bike_count))+
      geom_jitter()+
      xlab(&amp;quot;Direction&amp;quot;)+ylab(&amp;quot;Crossing&amp;quot;)+
      transition_time(DMY)+ease_aes(&amp;quot;linear&amp;quot;)+
      ggtitle(&amp;quot;Crossing and Direction for Bike Count&amp;quot;,
              subtitle = &amp;quot;Date: {frame_time}&amp;quot;)

animate(p,nframes=1899,fps=1)      &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/crossing%20vs%20direction%20with%20M%20or%20E%20and%20bikecount-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;averag-bike-count-in-different-time-laps&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Averag Bike Count in Different Time Laps&lt;/h1&gt;
&lt;div id=&#34;monthly-average-bike-count-for-everyday-with-am-or-pm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Monthly Average Bike Count for Everyday with AM or PM&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      mutate(Day=day(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Day) %&amp;gt;%
      summarise(Average=mean(bike_count,na.rm = TRUE)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Month),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      scale_y_continuous(labels=seq(0,175,5),breaks=seq(0,175,5))+
      xlab(&amp;quot;Month&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Dayly%20Average%20Bike%20Count%20by%20M%20or%20E-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;day-by-average-bike-count-for-everyday-with-am-or-pm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Day by Average Bike Count for Everyday with AM or PM&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Day=day(DMY)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Day) %&amp;gt;%
      summarise(Average=mean(bike_count,na.rm = TRUE)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Day),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
      scale_y_continuous(labels=seq(0,170,10),breaks=seq(0,170,10))+
      xlab(&amp;quot;Day&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Day%20and%20Year%20Averge%20Bike%20Count%20by%20M%20or%20E-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hourly-average-bike-count-for-every-month-with-am-or-pm&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hourly Average Bike Count for Every Month with AM or PM&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Hour=hour(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Hour) %&amp;gt;%
      summarise(Average=mean(bike_count,na.rm = TRUE)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Hour),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Hour&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,55,5),breaks=seq(0,55,5))+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Hourly%20and%20Year%20Average%20Bike%20Count%20by%20M%20or%20E-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;pedestrian-count-with-different-time-laps&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Pedestrian Count With Different Time Laps&lt;/h1&gt;
&lt;div id=&#34;monthly-pedestrian-count-for-everyday-with-am-or-pm-when-true&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Monthly Pedestrian Count for Everyday with AM or PM when TRUE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      mutate(Day=day(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Day) %&amp;gt;%
      subset(ped_count==TRUE) %&amp;gt;%
      summarise(Average=summary.factor(ped_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Month),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Month&amp;quot;)+ylab(&amp;quot;Pedestrian Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,22.5,2.5),breaks=seq(0,22.5,2.5))+
      ggtitle(&amp;quot;Pedestrian Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Daily%20Pedestrian%20Count%20by%20M%20or%20E%20when%20TRUE-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;monthly-pedestrian-count-for-everyday-with-am-or-pm-when-false&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Monthly Pedestrian Count for Everyday with AM or PM when FALSE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      mutate(Day=day(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Day) %&amp;gt;%
      subset(ped_count==FALSE) %&amp;gt;%
      summarise(Average=summary.factor(ped_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Month),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Month&amp;quot;)+ylab(&amp;quot;Pedestrian Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,75,5),breaks=seq(0,75,5))+
      ggtitle(&amp;quot;Pedestrian Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Daily%20Pedestrian%20Count%20by%20M%20or%20E%20when%20FALSE-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;day-by-pedestrian-count-for-everyday-with-am-or-pm-when-true&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Day by Pedestrian Count for Everyday with AM or PM when TRUE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Day=day(DMY)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Day) %&amp;gt;%
      subset(ped_count==TRUE) %&amp;gt;%
      summarise(Average=summary.factor(ped_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Day),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
      xlab(&amp;quot;Day&amp;quot;)+ylab(&amp;quot;Pedestrian Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,22.5,2.5),breaks=seq(0,22.5,2.5))+
      ggtitle(&amp;quot;Pedestrian Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Day%20and%20Year%20Pedestrian%20Count%20by%20M%20or%20E%20when%20TRUE-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;day-by-pedestrian-count-for-everyday-with-am-or-pm-when-false&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Day by Pedestrian Count for Everyday with AM or PM when FALSE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Day=day(DMY)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Day) %&amp;gt;%
      subset(ped_count==FALSE) %&amp;gt;%
      summarise(Average=summary.factor(ped_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Day),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
      xlab(&amp;quot;Day&amp;quot;)+ylab(&amp;quot;Pedestrian Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,70,5),breaks=seq(0,70,5))+
      ggtitle(&amp;quot;Pedestrian Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Day%20and%20Year%20Pedestrian%20Count%20by%20M%20or%20E%20when%20FALSE-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hourly-pedestrian-count-for-every-month-with-am-or-pm-when-true&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hourly Pedestrian Count for Every Month with AM or PM when TRUE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Hour=hour(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Hour) %&amp;gt;%
      subset(ped_count==TRUE) %&amp;gt;%
      summarise(Average=summary.factor(ped_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Hour),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Hour&amp;quot;)+ylab(&amp;quot;Pedestrian Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,60,5),breaks=seq(0,60,5))+
      ggtitle(&amp;quot;Pedestrian Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Hourly%20and%20Year%20Pedestrian%20Count%20by%20M%20or%20E%20when%20TRUE-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hourly-pedestrian-count-for-every-month-with-am-or-pm-when-false&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hourly Pedestrian Count for Every Month with AM or PM when FALSE&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Hour=hour(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,Hour) %&amp;gt;%
      subset(ped_count==TRUE) %&amp;gt;%
      summarise(Average=summary.factor(ped_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=factor(Hour),color=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Hour&amp;quot;)+ylab(&amp;quot;Pedestrian Count&amp;quot;)+
      scale_y_continuous(labels=seq(0,60,5),breaks=seq(0,60,5))+
      ggtitle(&amp;quot;Pedestrian Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Hourly%20and%20Year%20Pedestrian%20Count%20by%20M%20or%20E%20when%20FALSE-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;average-bike-count-with-crossings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Average Bike Count with Crossings&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,crossing) %&amp;gt;%
      summarise(Average=mean(bike_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=str_wrap(crossing,8),
             color=Month,shape=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Crossing&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Yearly%20Average%20Bike%20Count%20by%20M%20or%20E%20for%20Crossings-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;average-bike-count-with-directions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Average Bike Count with Directions&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      group_by(MorE,Year,Month,direction) %&amp;gt;%
      summarise(Average=mean(bike_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=str_wrap(direction,10),
             color=Month,shape=MorE))+
      geom_jitter()+transition_time(Year)+
      ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Direction&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Yearly%20Average%20Bike%20Count%20by%20M%20or%20E%20for%20direction-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;average-bike-count-with-crossings-by-day&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Average Bike Count with Crossings by Day&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      mutate(Wday=wday(DMY,label=TRUE)) %&amp;gt;%
      group_by(Year,Month,Wday,crossing) %&amp;gt;%
      summarise(Average=mean(bike_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=Wday,color=Month))+
      geom_jitter()+transition_time(Year)+
      theme(legend.position = &amp;quot;bottom&amp;quot;,axis.text.x = element_text(hjust=1,angle = 45))+
      ease_aes(&amp;quot;linear&amp;quot;)+facet_grid(~str_wrap(crossing,10))+
      xlab(&amp;quot;Day of the week&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Yearly%20Average%20Bike%20Count%20by%20M%20or%20E%20with%20days%20for%20Crossings-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;average-bike-count-with-directions-by-day&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Average Bike Count with Directions by Day&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-bike_traffic %&amp;gt;%
      cSplit(&amp;quot;date&amp;quot;,sep=&amp;quot; &amp;quot;) %&amp;gt;%
      rename(&amp;quot;DMY&amp;quot;=&amp;quot;date_1&amp;quot;) %&amp;gt;%
      rename(&amp;quot;HMS&amp;quot;=&amp;quot;date_2&amp;quot;) %&amp;gt;%
      rename(&amp;quot;MorE&amp;quot;=&amp;quot;date_3&amp;quot;) %&amp;gt;%
      mutate(DMY=mdy(DMY)) %&amp;gt;%
      mutate(HMS=hms(HMS)) %&amp;gt;%
      mutate(Year=year(DMY)) %&amp;gt;%
      mutate(Month=month(DMY)) %&amp;gt;%
      mutate(Wday=wday(DMY,label=TRUE)) %&amp;gt;%
      group_by(Year,Month,Wday,direction) %&amp;gt;%
      summarise(Average=mean(bike_count)) %&amp;gt;%
ggplot(.,aes(y=Average,x=Wday,color=Month))+
      geom_jitter()+transition_time(Year)+
      theme(legend.position = &amp;quot;bottom&amp;quot;)+
      ease_aes(&amp;quot;linear&amp;quot;)+facet_grid(~direction)+
      xlab(&amp;quot;Day of the Week&amp;quot;)+ylab(&amp;quot;Average Bike Count&amp;quot;)+
      ggtitle(&amp;quot;Average Bike Count changing with Time&amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)
  
animate(p,nframes=7,fps=1)    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week14/index_files/figure-html/Monthly%20and%20Yearly%20Average%20Bike%20Count%20by%20M%20or%20E%20with%20days%20for%20Direction-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 13 : Pets In Seattle</title>
      <link>/post/tidytuesday2019/week13/week13/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week13/week13/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#yearly-change&#34;&gt;Yearly Change&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#zipcode-counts-over-the-years&#34;&gt;Zipcode Counts Over the Years&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#species-counts-over-the-years&#34;&gt;Species Counts Over the Years&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#primary-breed-over-the-years&#34;&gt;Primary Breed Over the Years&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#animals-name-over-the-years&#34;&gt;Animals Name Over the Years&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#zipcode-and-choices&#34;&gt;ZipCode and Choices&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#zipcode-with-choices-of-species&#34;&gt;Zipcode with choices of Species&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#zipcode-with-choices-of-primary-breed&#34;&gt;Zipcode with choices of Primary Breed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#zipcode-with-choices-of-animals-name&#34;&gt;Zipcode with choices of Animals Name&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#primary-and-secondary-breed-choices-over-the-years&#34;&gt;Primary and Secondary Breed Choices Over the Years&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#species-and-name-choices-for-animals&#34;&gt;Species and Name choices for Animals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readr)
library(tidyverse)
library(gganimate)
library(splitstackshape)
library(forcats)
library(ggthemr)

ggthemr(&amp;quot;flat dark&amp;quot;)
seattle_pets &amp;lt;- read_csv(&amp;quot;seattle_pets.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Daisy is a name no longer used after 2016 even though it is popular before that and a sudden surge from 2017 towards registering pets.  &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; &lt;a href=&#34;https://t.co/bnYSgnkhac&#34;&gt;pic.twitter.com/bnYSgnkhac&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1111090496372391937?ref_src=twsrc%5Etfw&#34;&gt;March 28, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week13&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;yearly-change&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Yearly Change&lt;/h1&gt;
&lt;div id=&#34;zipcode-counts-over-the-years&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Zipcode Counts Over the Years&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(zip_code,Year) %&amp;gt;%
   group_by(Year) %&amp;gt;%
   count(zip_code) %&amp;gt;%
   remove_missing() %&amp;gt;%
   subset(Year &amp;gt;=2010) %&amp;gt;%
   top_n(25) %&amp;gt;%
ggplot(.,aes(x= fct_infreq(zip_code),y=n,fill=factor(Year)))+
  geom_col()+transition_time(Year)+ease_aes(&amp;quot;linear&amp;quot;) +
  coord_flip()+xlab(&amp;quot;Zip code&amp;quot;)+ylab(&amp;quot; Count&amp;quot;)+
  labs(fill=&amp;quot;Year&amp;quot;)+
  scale_y_continuous(breaks=seq(0,3000,250),labels = seq(0,3000,250))+
  ggtitle(&amp;quot;Zip Code Over the Years&amp;quot;,subtitle=&amp;quot;Year : {frame_time}&amp;quot;)

animate(p,fps=1,nframes=7)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/ZC%20with%20Years-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;species-counts-over-the-years&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Species Counts Over the Years&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(species,Year) %&amp;gt;%
   subset(Year &amp;gt;=2016) %&amp;gt;%
   group_by(Year) %&amp;gt;%
   count(species) %&amp;gt;%
ggplot(.,aes(x= species,y=n,fill=factor(Year),label=n))+
  geom_col()+geom_text()+
  transition_states(Year,transition_length = 2,state_length = 2)+
  enter_fade()+exit_shrink()+ease_aes(&amp;quot;back-in&amp;quot;)+
  xlab(&amp;quot;Species&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+ labs(fill=&amp;quot;Year&amp;quot;)+
  scale_y_continuous(breaks=seq(0,23000,1000),labels=seq(0,23000,1000))+
  ggtitle(&amp;quot;Species Over the Years&amp;quot;,subtitle = &amp;quot;Year: {closest_state}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/Species%20with%20Years-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;primary-breed-over-the-years&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Primary Breed Over the Years&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(primary_breed,Year) %&amp;gt;%
   group_by(Year) %&amp;gt;%
   count(primary_breed) %&amp;gt;%
   remove_missing() %&amp;gt;%
   subset(Year &amp;gt;=2010) %&amp;gt;%
   top_n(15) %&amp;gt;%
ggplot(.,aes(x= str_wrap(primary_breed,20),y=n,label=n,fill=factor(Year)))+
  geom_col()+transition_time(Year)+ease_aes(&amp;quot;linear&amp;quot;) +
  coord_flip()+geom_text()+labs(fill=&amp;quot;Year&amp;quot;)+
  xlab(&amp;quot;Primary Breed&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
  scale_y_continuous(breaks=seq(0,6000,500),labels=seq(0,6000,500))+
  ggtitle(&amp;quot;Primary Breed Over the Years&amp;quot;,subtitle = &amp;quot;Year : {frame_time}&amp;quot;)

animate(p,fps=1,nframes=8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/Primary%20Breed%20with%20Years-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animals-name-over-the-years&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Animals Name Over the Years&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(animals_name,Year) %&amp;gt;%
   group_by(Year) %&amp;gt;%
   count(animals_name) %&amp;gt;%
   remove_missing() %&amp;gt;%
   subset(Year &amp;gt;=2010) %&amp;gt;%
   top_n(5) %&amp;gt;%
ggplot(.,aes(x= fct_infreq(animals_name),y=n,fill=factor(Year),label=n))+
  geom_col()+transition_time(Year)+ease_aes(&amp;quot;linear&amp;quot;) +
  coord_flip()+geom_text()+labs(fill=&amp;quot;Year&amp;quot;)+
  xlab(&amp;quot;Animals Name&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
  scale_y_continuous(breaks = seq(0,275,25),labels=seq(0,275,25))+
  ggtitle(&amp;quot;Animales N ame Over the Years&amp;quot;,
          subtitle = &amp;quot;Year : {frame_time}&amp;quot;)

animate(p,fps=1,nframes=8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/Names%20with%20Years-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;zipcode-and-choices&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;ZipCode and Choices&lt;/h1&gt;
&lt;div id=&#34;zipcode-with-choices-of-species&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Zipcode with choices of Species&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(zip_code,species,Year,Month) %&amp;gt;%
   mutate(Month = as.integer(Month)) %&amp;gt;%
   cSplit(&amp;quot;zip_code&amp;quot;,sep = &amp;quot;-&amp;quot;) %&amp;gt;%
   remove_missing() %&amp;gt;%
   unite(&amp;quot;zip_code&amp;quot;,c(&amp;quot;zip_code_1&amp;quot;,&amp;quot;zip_code_2&amp;quot;)) %&amp;gt;%
ggplot(.,aes(x=factor(Month),y=factor(zip_code),
             shape=species,color=factor(Year)))+geom_jitter()+
      transition_time(Year)+ ease_aes(&amp;quot;linear&amp;quot;)+
      ggtitle(&amp;quot;Zipcode vs Species of Choice &amp;quot;,
              subtitle = &amp;quot;Year : {frame_time}&amp;quot;)+
      shadow_mark()+xlab(&amp;quot;Month&amp;quot;)+ylab(&amp;quot;Zip Code&amp;quot;)+
      labs(color=&amp;quot;Year&amp;quot;,shape=&amp;quot;Species&amp;quot;)
      
animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/ZC%20with%20Species%201-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a&amp;lt;-seattle_pets %&amp;gt;%
   count(zip_code) %&amp;gt;%
   top_n(10)

seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(zip_code,species,Year,Month) %&amp;gt;%
   mutate(Month = as.integer(Month)) %&amp;gt;%
   subset(zip_code %in% c(a$zip_code)) %&amp;gt;%
ggplot(.,aes(x=species,y=zip_code,color=Month))+geom_jitter()+
      transition_states(Year,transition_length = 2,state_length = 3)+
      enter_fade()+exit_shrink()+ease_aes(&amp;quot;back-in&amp;quot;)+
      xlab(&amp;quot;Species&amp;quot;)+ylab(&amp;quot;Zip Code&amp;quot;)+
      ggtitle(&amp;quot;Top 10 Zipcodes vs Species of Choice &amp;quot;,
              subtitle = &amp;quot;Year : {closest_state}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/ZC%20with%20Species%20top%2010-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;zipcode-with-choices-of-primary-breed&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Zipcode with choices of Primary Breed&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;b&amp;lt;-seattle_pets %&amp;gt;%
   count(primary_breed) %&amp;gt;%
   top_n(10)

seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(zip_code,primary_breed,Year,Month) %&amp;gt;%
   mutate(Month = as.integer(Month)) %&amp;gt;%
   subset(zip_code %in% c(a$zip_code)) %&amp;gt;%
   subset(primary_breed %in% c(b$primary_breed)) %&amp;gt;%
ggplot(.,aes(x=str_wrap(primary_breed,10),y=zip_code,color=Month))+
      geom_jitter()+
      transition_states(Year,transition_length = 2,state_length = 3)+
      enter_fade()+exit_shrink()+ease_aes(&amp;quot;back-in&amp;quot;)+
      xlab(&amp;quot;Primary Breed&amp;quot;)+ylab(&amp;quot;Zip Code&amp;quot;)+
      ggtitle(&amp;quot;Top 10 Zipcode and Primary Breed of Choice &amp;quot;,
              subtitle = &amp;quot;Year : {closest_state}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/ZC%20with%20Primary%20Breed%20top%2010-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;zipcode-with-choices-of-animals-name&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Zipcode with choices of Animals Name&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;d&amp;lt;-seattle_pets %&amp;gt;%
   count(animals_name) %&amp;gt;%
   top_n(10)

e&amp;lt;-seattle_pets %&amp;gt;%
   count(zip_code) %&amp;gt;%
   top_n(15)

seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(zip_code,animals_name,Year,Month) %&amp;gt;%
   mutate(Month = as.integer(Month)) %&amp;gt;%
   subset(zip_code %in% c(e$zip_code)) %&amp;gt;%
   subset(animals_name %in% c(d$animals_name)) %&amp;gt;%
ggplot(.,aes(x=animals_name,y=zip_code,color=Month))+geom_jitter()+
      transition_states(Year,transition_length = 2,state_length = 3)+
      enter_fade()+exit_shrink()+ease_aes(&amp;quot;back-in&amp;quot;)+
      xlab(&amp;quot;Animals Name&amp;quot;)+ylab(&amp;quot;Zip Code&amp;quot;)+
      ggtitle(&amp;quot;Top 10 Zipcode and Top 15 Animals Name of Choice &amp;quot;,
              subtitle = &amp;quot;Year : {closest_state}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/ZC%20with%20Animals%20Name%20top%2010-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;primary-and-secondary-breed-choices-over-the-years&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Primary and Secondary Breed Choices Over the Years&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a&amp;lt;-seattle_pets %&amp;gt;%
   count(primary_breed) %&amp;gt;%
   top_n(10)

b&amp;lt;-seattle_pets %&amp;gt;%
   count(secondary_breed) %&amp;gt;%
   top_n(10)

seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(primary_breed,secondary_breed,Year,Month) %&amp;gt;%
   remove_missing() %&amp;gt;%
   mutate(Month = as.integer(Month)) %&amp;gt;%
   subset(primary_breed %in% c(a$primary_breed)) %&amp;gt;%
   subset(secondary_breed %in% c(b$secondary_breed)) %&amp;gt;%
ggplot(.,aes(x=str_wrap(primary_breed,12),y=str_wrap(secondary_breed,12),
             color=Month))+
      geom_jitter()+xlab(&amp;quot;Primary Breed&amp;quot;)+ylab(&amp;quot;Second Breed&amp;quot;)+
      transition_states(Year,transition_length = 2,state_length = 3)+
      enter_fade() + exit_shrink() +ease_aes(&amp;quot;back-in&amp;quot;)+
      #theme(axis.text.x = element_text(angle = 270))+
      ggtitle(&amp;quot;Top 10 Primary and Secondary Breeds&amp;quot;, 
              subtitle = &amp;quot;Year : {closest_state}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/Primary%20and%20Secondary%20Breed-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;species-and-name-choices-for-animals&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Species and Name choices for Animals&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;b&amp;lt;-seattle_pets %&amp;gt;%
   count(animals_name) %&amp;gt;%
   top_n(15)

seattle_pets %&amp;gt;%
   cSplit(&amp;quot;license_issue_date&amp;quot;,sep = &amp;quot; &amp;quot;) %&amp;gt;%
   rename(Month =license_issue_date_1) %&amp;gt;%
   rename(Day = license_issue_date_2) %&amp;gt;%
   rename(Year = license_issue_date_3) %&amp;gt;%
   select(species,animals_name,Year,Month) %&amp;gt;%
   remove_missing() %&amp;gt;%
   mutate(Month = as.integer(Month)) %&amp;gt;%
   subset(animals_name %in% c(b$animals_name)) %&amp;gt;%
ggplot(.,aes(y=animals_name,x=species,color=Month))+geom_jitter()+
      transition_states(Year,transition_length = 2,state_length = 3)+
      enter_fade() + exit_shrink() +ease_aes(&amp;quot;back-in&amp;quot;)+
      ylab(&amp;quot;Animals Name&amp;quot;)+xlab(&amp;quot;Species&amp;quot;)+
      ggtitle(&amp;quot;Animals Name and Species&amp;quot;, 
              subtitle = &amp;quot;Year : {closest_state}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week13/index_files/figure-html/Species%20and%20Name%20Choices-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 11 : Board Games</title>
      <link>/post/tidytuesday2019/week11/week11/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week11/week11/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#minimum-no-of-players-and-minimum-play-time&#34;&gt;Minimum No of Players and Minimum Play Time&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#general&#34;&gt;General&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scrutinized&#34;&gt;Scrutinized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#more-scrutinized&#34;&gt;More Scrutinized&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#maximum-no-of-players-and-maximmum-play-time&#34;&gt;Maximum No of Players and Maximmum Play Time&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#general-1&#34;&gt;General&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scrutinized-1&#34;&gt;Scrutinized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#more-scrutinized-1&#34;&gt;More Scrutinized&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#maximum-no-of-players-and-average-rating&#34;&gt;Maximum No of Players and Average Rating&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#general-2&#34;&gt;General&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scrutinized-2&#34;&gt;Scrutinized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#more-scrutinized-2&#34;&gt;More Scrutinized&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#average-rating-and-users-rated&#34;&gt;Average Rating and Users Rated&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#animated&#34;&gt;Animated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#not-animated&#34;&gt;Not Animated&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#category-and-rating&#34;&gt;Category and Rating&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#general-and-category-1&#34;&gt;General and Category 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#general-and-category-2&#34;&gt;General and Category 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load the packages
library(readr)
library(tidyverse)
library(tidylog)
library(gganimate)
library(splitstackshape)
library(ggthemr)

# load the theme
ggthemr(&amp;quot;chalk&amp;quot;)

# load the data
board_games &amp;lt;- read_csv(&amp;quot;board_games.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Board Games data-set contains a lot of variables yet i will be focusing on only a few of them here. They are category, year_published, average_rating, users_rated, max_players, max_playtime, min_players and min_playtime. Mostly the plots will identify patterns how over the years variables change with the help of jitter/point plots. Slightly above 10,000 observations are in this data-set&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; In the mid-2010s, card games as the first category are higher!!!!!!!!!!. Code: &lt;a href=&#34;https://t.co/1e5zotWApC&#34;&gt;https://t.co/1e5zotWApC&lt;/a&gt; &lt;a href=&#34;https://t.co/QebdFPAJuE&#34;&gt;pic.twitter.com/QebdFPAJuE&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1105389530008317952?ref_src=twsrc%5Etfw&#34;&gt;March 12, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week11&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;minimum-no-of-players-and-minimum-play-time&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Minimum No of Players and Minimum Play Time&lt;/h1&gt;
&lt;p&gt;If we consider minimum no of players and minimum play time we can see how the data points are spread out. In order to understand clearly we have changed the limits of x-axis and y-axis twice.&lt;/p&gt;
&lt;div id=&#34;general&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;General&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(board_games,aes(min_players,min_playtime))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Minimum No of Players&amp;quot;)+
          ylab(&amp;quot;Minimum Playing Time&amp;quot;)+
          scale_x_continuous(breaks=seq(0,9),labels = seq(0,9))+
          scale_y_continuous(breaks = seq(0,60000,5000),labels=seq(0,60000,5000))+
          ggtitle(&amp;quot;Minimum No of Players vs Minimum Playing Time&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/min%20players%20and%20min%20play%20time%201-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scrutinized&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scrutinized&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(board_games, min_playtime &amp;lt; 5000) %&amp;gt;%
   ggplot(.,aes(min_players,min_playtime))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Minimum No of Players&amp;quot;)+
          ylab(&amp;quot;Minimum Playing Time&amp;quot;)+
          scale_x_continuous(breaks=seq(0,9),labels = seq(0,9))+
          scale_y_continuous(breaks = seq(0,5000,500),labels=seq(0,5000,500))+
          ggtitle(&amp;quot;Minimum No of Players vs Minimum Playing Time&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/min%20players%20and%20min%20play%20time%202-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-scrutinized&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;More Scrutinized&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(board_games, min_playtime &amp;lt; 500) %&amp;gt;%
   ggplot(.,aes(min_players,min_playtime))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Minimum No of Players&amp;quot;)+
          ylab(&amp;quot;Minimum Playing Time&amp;quot;)+
          scale_x_continuous(breaks=seq(0,9),labels = seq(0,9))+
          scale_y_continuous(breaks = seq(0,500,50),labels=seq(0,500,50))+
          ggtitle(&amp;quot;Minimum No of Players vs Minimum Playing Time&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/min%20players%20and%20min%20play%20time%203-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;maximum-no-of-players-and-maximmum-play-time&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Maximum No of Players and Maximmum Play Time&lt;/h1&gt;
&lt;p&gt;Similarly, we are generating three plots to understand how Maximum No of Players and Maximum Play Time is behaving. Below are the three plots.&lt;/p&gt;
&lt;div id=&#34;general-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;General&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(board_games,aes(max_players,max_playtime))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Maximum No of Players&amp;quot;)+
          ylab(&amp;quot;Maximum Playing Time&amp;quot;)+
          scale_x_continuous(breaks=seq(0,1000,50),labels = seq(0,1000,50))+
          scale_y_continuous(breaks = seq(0,60000,5000),labels=seq(0,60000,5000))+
          ggtitle(&amp;quot;Maximum No of Players vs Maximum Playing Time&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/max%20players%20and%20max%20play%20time%201-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scrutinized-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scrutinized&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(board_games,max_players&amp;lt; 125 &amp;amp; max_playtime &amp;lt; 10000) %&amp;gt;%
   ggplot(.,aes(max_players,max_playtime))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Maximum No of Players&amp;quot;)+
          ylab(&amp;quot;Maximum Playing Time&amp;quot;)+
          scale_x_continuous(breaks=seq(0,100,10),labels = seq(0,100,10))+
          scale_y_continuous(breaks = seq(0,6000,500),labels=seq(0,6000,500))+
          ggtitle(&amp;quot;Maximum No of Players vs Maximum Playing Time&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/max%20players%20and%20max%20play%20time%202-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-scrutinized-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;More Scrutinized&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(board_games,max_players&amp;lt; 15 &amp;amp; max_playtime &amp;lt; 1000) %&amp;gt;%
   ggplot(.,aes(max_players,max_playtime))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Maximum No of Players&amp;quot;)+
          ylab(&amp;quot;Maximum Playing Time&amp;quot;)+
          scale_x_continuous(breaks=seq(0,15),labels = seq(0,15))+
          scale_y_continuous(breaks = seq(0,1000,50),labels=seq(0,1000,50))+
          ggtitle(&amp;quot;Maximum No of Players vs Maximum Playing Time&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/max%20players%20and%20max%20play%20time%203-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;maximum-no-of-players-and-average-rating&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Maximum No of Players and Average Rating&lt;/h1&gt;
&lt;p&gt;Next is plotting the variables Maximum No of Players and Average Rating. Where over the time period from 1950 to 2016 the data is plotted here. There is three stages of plotting here also. Below is the code and plots.&lt;/p&gt;
&lt;div id=&#34;general-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;General&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(board_games,aes(max_players,average_rating))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Maximum No of Players&amp;quot;)+
          ylab(&amp;quot;Average Rating&amp;quot;)+
          scale_x_continuous(breaks=seq(0,1000,50),labels = seq(0,1000,50))+
          scale_y_continuous(breaks = seq(0,10,.5),labels=seq(0,10,.5))+
          ggtitle(&amp;quot;Maximum No of Players vs Average Rating&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/maximum%20players%20and%20avg%20rating%201-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scrutinized-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scrutinized&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(board_games,max_players &amp;lt;75 ) %&amp;gt;%
   ggplot(.,aes(max_players,average_rating))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Maximum No of Players&amp;quot;)+
          ylab(&amp;quot;Average Rating&amp;quot;)+
          scale_x_continuous(breaks=seq(0,75,5),labels = seq(0,75,5))+
          scale_y_continuous(breaks = seq(0,10,.5),labels=seq(0,10,.5))+
          ggtitle(&amp;quot;Maximum No of Players vs Average Rating&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/maximum%20players%20and%20avg%20rating%202-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-scrutinized-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;More Scrutinized&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(board_games,max_players &amp;lt;15 ) %&amp;gt;%
   ggplot(.,aes(max_players,average_rating))+
          geom_jitter()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          xlab(&amp;quot;Maximum No of Players&amp;quot;)+
          ylab(&amp;quot;Average Rating&amp;quot;)+
          scale_x_continuous(breaks=seq(0,15),labels = seq(0,15))+
          scale_y_continuous(breaks = seq(0,10,.5),labels=seq(0,10,.5))+
          ggtitle(&amp;quot;Maximum No of Players vs Average Rating&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/maximum%20players%20and%20avg%20rating%203-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;average-rating-and-users-rated&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Average Rating and Users Rated&lt;/h1&gt;
&lt;p&gt;Now I am focusing on Average Rating with Users Rated, where the former is in a scale from 1 to 10 and the latter is just count.&lt;/p&gt;
&lt;div id=&#34;animated&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Animated&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(board_games,aes(average_rating,users_rated))+
          geom_point()+transition_time(year_published)+
          ease_aes(&amp;quot;linear&amp;quot;)+
          ylab(&amp;quot;Users Rated&amp;quot;)+
          xlab(&amp;quot;Average Rating&amp;quot;)+
          scale_x_continuous(breaks=seq(0,10,.5),labels = seq(0,10,.5))+
          scale_y_continuous(breaks = seq(0,70000,2500),labels=seq(0,70000,2500))+
          ggtitle(&amp;quot;Average Rating vs Users Rated&amp;quot;,
                  subtitle =&amp;quot;Year :{frame_time}&amp;quot; )

animate(p,nframes=67,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/Average%20Rating%20vs%20Users%20rated%201-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;not-animated&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Not Animated&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(board_games,aes(average_rating,users_rated,color=year_published))+
          geom_point(alpha=0.85)+
          labs(color=&amp;quot;Year&amp;quot;)+
          ylab(&amp;quot;Users Rated&amp;quot;)+
          xlab(&amp;quot;Average Rating&amp;quot;)+
          scale_x_continuous(breaks=seq(0,10,.5),labels = seq(0,10,.5))+
          scale_y_continuous(breaks = seq(0,70000,2500),labels=seq(0,70000,2500))+
          ggtitle(&amp;quot;Average Rating vs Users Rated&amp;quot;,
                  subtitle =&amp;quot;Year : 1950 to 2016&amp;quot; )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/Average%20Rating%20vs%20Users%20rated%202-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;category-and-rating&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Category and Rating&lt;/h1&gt;
&lt;p&gt;Finally, there are two plots which focuses on board games which has average rating above 7 with category. Even though a game can have multiple categories here I have chosen the first four while ignoring the others. Because most of the games do not have a third category it would be pointless in my perspective.&lt;/p&gt;
&lt;div id=&#34;general-and-category-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;General and Category 1&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-board_games %&amp;gt;%
   select(year_published,category,average_rating) %&amp;gt;%
   cSplit(&amp;quot;category&amp;quot;,sep=&amp;quot;,&amp;quot;) %&amp;gt;%
   gather(Groups,category,&amp;quot;category_01&amp;quot;,&amp;quot;category_02&amp;quot;,&amp;quot;category_03&amp;quot;,&amp;quot;category_04&amp;quot;) %&amp;gt;%
   select(year_published,Groups,category,average_rating) %&amp;gt;%
   subset(Groups==&amp;quot;category_01&amp;quot; &amp;amp; average_rating &amp;gt; 7)%&amp;gt;%
   ggplot(.,aes(category,average_rating))+geom_jitter()+
   coord_flip()+xlab(&amp;quot;Category&amp;quot;)+ylab(&amp;quot;Average Rating&amp;quot;)+
   transition_time(year_published)+ease_aes(&amp;quot;linear&amp;quot;)+
   ggtitle(&amp;quot;Average Rating for First Category&amp;quot;,
           subtitle = &amp;quot;Year: {floor(frame_time)}&amp;quot;)

animate(p,fps=1,nframes=54)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/Category%20and%20rating%201-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;general-and-category-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;General and Category 2&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-board_games %&amp;gt;%
   select(year_published,category,average_rating) %&amp;gt;%
   cSplit(&amp;quot;category&amp;quot;,sep=&amp;quot;,&amp;quot;) %&amp;gt;%
   gather(Groups,category,&amp;quot;category_01&amp;quot;,&amp;quot;category_02&amp;quot;,&amp;quot;category_03&amp;quot;,&amp;quot;category_04&amp;quot;) %&amp;gt;%
   select(year_published,Groups,category,average_rating) %&amp;gt;%
   subset(Groups==&amp;quot;category_02&amp;quot; &amp;amp; average_rating &amp;gt;7)%&amp;gt;%
   ggplot(.,aes(category,average_rating))+geom_jitter()+
   coord_flip()+xlab(&amp;quot;Category&amp;quot;)+ylab(&amp;quot;Average Rating&amp;quot;)+
   transition_time(year_published)+ease_aes(&amp;quot;linear&amp;quot;)+
   ggtitle(&amp;quot;Average Rating for Second Category&amp;quot;,
           subtitle = &amp;quot;Year: {floor(frame_time)}&amp;quot;)

animate(p,fps=1,nframes=54)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week11/index_files/figure-html/Category%20and%20rating%202-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 10: Women in Workforce</title>
      <link>/post/tidytuesday2019/week10/week10/</link>
      <pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week10/week10/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#earnings-female&#34;&gt;Earnings Female&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#all-other-age-groups&#34;&gt;All other age groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#employed-gender&#34;&gt;Employed Gender&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#comparing-full-time-with-part-time&#34;&gt;Comparing Full Time with Part Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#male-occupants-with-full-time-and-part-time-work&#34;&gt;Male Occupants with Full Time and Part Time Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#female-occupants-with-full-time-and-part-time-work&#34;&gt;Female Occupants with Full Time and Part Time Work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#jobs-gender&#34;&gt;Jobs Gender&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#major-category&#34;&gt;Major Category&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#major-category-and-total-workers&#34;&gt;Major Category and Total Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-category-and-male-workers&#34;&gt;Major Category and Male Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-category-and-female-workers&#34;&gt;Major Category and Female Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-category-and-total-earnings-male-wage&#34;&gt;Major Category and Total Earnings Male Wage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-category-and-total-earnings-female-wage&#34;&gt;Major Category and Total Earnings Female Wage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-category-and-wage-percent-for-female-relative-to-male&#34;&gt;Major Category and Wage Percent for Female relative to Male&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category&#34;&gt;Minor Category&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category-and-total-workers&#34;&gt;Minor Category and Total Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category-and-male-workers&#34;&gt;Minor Category and Male Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category-and-female-workers&#34;&gt;Minor Category and Female Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category-and-total-earnings-male-wage&#34;&gt;Minor Category and Total Earnings Male Wage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category-and-total-earnings-female-wage&#34;&gt;Minor Category and Total Earnings Female Wage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#minor-category-and-wage-percent-for-female-relative-to-male&#34;&gt;Minor Category and Wage Percent for Female relative to Male&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week10&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Minor Categories and Female wage with relative to Male is above 75% over in the year 2016 but less in other years of 2013,2014 and 2015 for some categories. &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; Code: &lt;a href=&#34;https://t.co/8Ck8babjy1&#34;&gt;https://t.co/8Ck8babjy1&lt;/a&gt; &lt;a href=&#34;https://t.co/VLMkhozWay&#34;&gt;pic.twitter.com/VLMkhozWay&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1103226092352139264?ref_src=twsrc%5Etfw&#34;&gt;March 6, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#load the packages
library(tidyverse)
library(gganimate)
library(readr)
library(ggthemr)

# load the theme
ggthemr(&amp;quot;fresh&amp;quot;)

# load the data
earnings_female &amp;lt;- read_csv(&amp;quot;earnings_female.csv&amp;quot;)
employed_gender &amp;lt;- read_csv(&amp;quot;employed_gender.csv&amp;quot;)
jobs_gender &amp;lt;- read_csv(&amp;quot;jobs_gender.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;earnings-female&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Earnings Female&lt;/h1&gt;
&lt;div id=&#34;all-other-age-groups&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;All other age groups&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;average&amp;lt;-earnings_female %&amp;gt;%
         filter(group==&amp;quot;Total, 16 years and older&amp;quot;) %&amp;gt;%
         mutate(year=cut(Year,breaks = c(1978,1989,1999,2011),
                  labels =c(&amp;quot;1980s&amp;quot;,&amp;quot;1990s&amp;quot;,&amp;quot;2000s&amp;quot;) ) ) %&amp;gt;%
        group_by(year) %&amp;gt;%
        summarize(Mean=mean(percent))

earnings_female %&amp;gt;%
  filter(group!=&amp;quot;Total, 16 years and older&amp;quot;) %&amp;gt;%
ggplot(.,aes(Year,percent,color=group))+
  geom_point()+geom_line()+
  theme(legend.position = &amp;quot;bottom&amp;quot;)+
  geom_hline(yintercept = average$Mean,color=c(&amp;quot;red&amp;quot;,&amp;quot;maroon&amp;quot;,&amp;quot;brown&amp;quot;),size=1.2)+
  annotate(&amp;quot;text&amp;quot;,x=2010,y=68,label=&amp;quot;1980s Average&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,x=1983,y=76,label=&amp;quot;1990s Average&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,x=2008,y=80.5,label=&amp;quot;2000s Average&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/except%20total-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;employed-gender&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Employed Gender&lt;/h1&gt;
&lt;div id=&#34;comparing-full-time-with-part-time&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Comparing Full Time with Part Time&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;employed_gender %&amp;gt;%
  select(year,total_full_time,total_part_time) %&amp;gt;%
  gather(Type,percent,c(total_full_time,total_part_time)) %&amp;gt;%
ggplot(.,aes(year,percent,fill=Type,label=round(percent)))+
  geom_col()+theme(legend.position = &amp;quot;bottom&amp;quot;)+
  geom_text(nudge_y = -.75,color=&amp;quot;white&amp;quot;)+xlab(&amp;quot;Year&amp;quot;)+
  ylab(&amp;quot;Percentage&amp;quot;)+
  ggtitle(&amp;quot;Total Work Force Full Time and Part Time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/total%20full%20and%20part-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;male-occupants-with-full-time-and-part-time-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Male Occupants with Full Time and Part Time Work&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;employed_gender %&amp;gt;%
  select(year,full_time_male,part_time_male) %&amp;gt;%
  gather(Type,percent,c(full_time_male,part_time_male)) %&amp;gt;%
ggplot(.,aes(year,percent,fill=Type,label=round(percent)))+
  geom_col()+theme(legend.position = &amp;quot;bottom&amp;quot;)+
  geom_text(nudge_y = -.75,color=&amp;quot;white&amp;quot;)+xlab(&amp;quot;Year&amp;quot;)+
  ylab(&amp;quot;Percentage&amp;quot;)+
  ggtitle(&amp;quot;Male Work Force Full Time and Part Time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/male%20full%20and%20part-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;female-occupants-with-full-time-and-part-time-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Female Occupants with Full Time and Part Time Work&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;employed_gender %&amp;gt;%
  select(year,full_time_female,part_time_female) %&amp;gt;%
  gather(Type,percent,c(full_time_female,part_time_female)) %&amp;gt;%
ggplot(.,aes(year,percent,fill=Type,label=round(percent)))+
  geom_col()+theme(legend.position = &amp;quot;bottom&amp;quot;)+
  geom_text(nudge_y = -.75,color=&amp;quot;white&amp;quot;)+xlab(&amp;quot;Year&amp;quot;)+
  ylab(&amp;quot;Percentage&amp;quot;)+
  ggtitle(&amp;quot;Female Work Force Full Time and Part Time&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/female%20full%20and%20part-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;jobs-gender&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Jobs Gender&lt;/h1&gt;
&lt;div id=&#34;major-category&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Major Category&lt;/h2&gt;
&lt;div id=&#34;major-category-and-total-workers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Major Category and Total Workers&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jg_avg&amp;lt;-jobs_gender %&amp;gt;%
        select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
        group_by(year,major_category) %&amp;gt;%
        group_by(year) %&amp;gt;%
        summarize_if(is.numeric,funs(mean),na.rm=TRUE)

p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
     group_by(year,major_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(major_category,12),total_workers,label=round(total_workers,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+  
  ggtitle(&amp;quot;Total Workers changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Major Category&amp;quot;)+ylab(&amp;quot;Total Workers&amp;quot;)+geom_text(vjust=-1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/major%20category%20total%20workers-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-category-and-male-workers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Major Category and Male Workers&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
     group_by(year,major_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(major_category,12),workers_male,label=round(workers_male,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+  
  ggtitle(&amp;quot;Male Workers changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Major Category&amp;quot;)+ylab(&amp;quot;Male Workers&amp;quot;)+geom_text(vjust=-1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/major%20category%20male%20workers-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-category-and-female-workers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Major Category and Female Workers&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
     group_by(year,major_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(major_category,12),workers_female,label=round(workers_female,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+  
  ggtitle(&amp;quot;Female Workers changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Major Category&amp;quot;)+ylab(&amp;quot;Female Workers&amp;quot;)+geom_text(vjust=-1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/major%20category%20female%20workers-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-category-and-total-earnings-male-wage&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Major Category and Total Earnings Male Wage&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
     group_by(year,major_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(major_category,12),total_earnings_male,label=round(total_earnings_male,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;) +
  ggtitle(&amp;quot;Total Earnings Male Wage changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Major Category&amp;quot;)+ylab(&amp;quot;Total Earnings Male&amp;quot;)+geom_text(vjust=-1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/major%20category%20earnings%20male-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-category-and-total-earnings-female-wage&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Major Category and Total Earnings Female Wage&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
     group_by(year,major_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(major_category,12),total_earnings_female,label=round(total_earnings_female)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
  ggtitle(&amp;quot;Total Earnings Female Wage changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Major Category&amp;quot;)+ylab(&amp;quot;Total Earnings Female&amp;quot;)+geom_text(vjust=-1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/major%20category%20earnings%20female-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-category-and-wage-percent-for-female-relative-to-male&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Major Category and Wage Percent for Female relative to Male&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;minor_category&amp;quot;))) %&amp;gt;%
     group_by(year,major_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(major_category,12),wage_percent_of_male,
             label=round(wage_percent_of_male,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
  ggtitle(&amp;quot;Wage Percent of Female relative to Male changing Over time&amp;quot;,
          subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Major Category&amp;quot;)+ylab(&amp;quot;Relative Percentage&amp;quot;)+geom_text(vjust=-1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/major%20category%20and%20wage%20percent%20for%20Female%20relative%20to%20Male-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;minor-category&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Minor Category&lt;/h2&gt;
&lt;div id=&#34;minor-category-and-total-workers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Minor Category and Total Workers&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;major_category&amp;quot;))) %&amp;gt;%
     group_by(year,minor_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(minor_category,20),total_workers,label=round(total_workers,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
  ggtitle(&amp;quot;Total Workers changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Minor Category&amp;quot;)+ylab(&amp;quot;Total Workers&amp;quot;)+geom_text(hjust=&amp;quot;inward&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/minor%20category%20total%20workers-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;minor-category-and-male-workers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Minor Category and Male Workers&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;major_category&amp;quot;))) %&amp;gt;%
     group_by(year,minor_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(minor_category,20),workers_male,label=round(workers_male,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
  ggtitle(&amp;quot;Male Workers changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Minor Category&amp;quot;)+ylab(&amp;quot;Male Workers&amp;quot;)+geom_text(hjust=&amp;quot;inward&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/minor%20category%20male%20workers-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;minor-category-and-female-workers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Minor Category and Female Workers&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;major_category&amp;quot;))) %&amp;gt;%
     group_by(year,minor_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(minor_category,20),workers_female,label=round(workers_female,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
  ggtitle(&amp;quot;Female Workers changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Minor Category&amp;quot;)+ylab(&amp;quot;Female Workers&amp;quot;)+geom_text(hjust=&amp;quot;inward&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/minor%20category%20female%20workers-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;minor-category-and-total-earnings-male-wage&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Minor Category and Total Earnings Male Wage&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;major_category&amp;quot;))) %&amp;gt;%
     group_by(year,minor_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(minor_category,20),total_earnings_male,label=round(total_earnings_male,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
  ggtitle(&amp;quot;Total Earnings Male Wage changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Minor Category&amp;quot;)+ylab(&amp;quot;Total earnings Male&amp;quot;)+geom_text(hjust=&amp;quot;inward&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/minor%20category%20total%20earnings%20male%20wage-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;minor-category-and-total-earnings-female-wage&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Minor Category and Total Earnings Female Wage&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;major_category&amp;quot;))) %&amp;gt;%
     group_by(year,minor_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(minor_category,20),total_earnings_female,label=round(total_earnings_female,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+coord_flip()+
  ggtitle(&amp;quot;Total Earnings Female Wage changing Over time&amp;quot;,subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+
  xlab(&amp;quot;Minor Category&amp;quot;)+ylab(&amp;quot;Total earnings Female&amp;quot;)+geom_text(hjust=&amp;quot;inward&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/minor%20category%20total%20earnings%20female%20wage-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;minor-category-and-wage-percent-for-female-relative-to-male&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Minor Category and Wage Percent for Female relative to Male&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-jobs_gender %&amp;gt;%
     select(-one_of(c(&amp;quot;occupation&amp;quot;,&amp;quot;major_category&amp;quot;))) %&amp;gt;%
     group_by(year,minor_category) %&amp;gt;%
     summarise_all(funs(mean),na.rm=TRUE) %&amp;gt;%
ggplot(.,aes(str_wrap(minor_category,18),wage_percent_of_male,
             label=round(wage_percent_of_male,2)))+
  geom_col()+transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
  ggtitle(&amp;quot;Wage Percent of Female relative to Male changing Over time&amp;quot;,
          subtitle = &amp;quot;Year :{frame_time}&amp;quot;)+coord_flip()+
  xlab(&amp;quot;Minor Category&amp;quot;)+ylab(&amp;quot;Relative Percentage&amp;quot;)+geom_text(hjust=1)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week10/index_files/figure-html/minor%20category%20and%20wage%20percent%20for%20Female%20relative%20to%20Male-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 9 : French Train Delays</title>
      <link>/post/tidytuesday2019/week9/week9/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week9/week9/</guid>
      <description>&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load the packages
library(readr)
library(tidyverse)
library(gganimate)
library(ggalluvial)
library(geomnet)
library(ggthemr)

# load the theme
ggthemr(&amp;quot;fresh&amp;quot;)

# load the data
small_trains &amp;lt;- read_csv(&amp;quot;small_trains.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week9&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-02-26&#34;&gt;Data set&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When Journey Average  Time increases the Total Number of Trips will decrease. Obviously. Code : &lt;a href=&#34;https://t.co/qY2l10OraS&#34;&gt;https://t.co/qY2l10OraS&lt;/a&gt;  &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; &lt;a href=&#34;https://t.co/ZZn0l7E7WZ&#34;&gt;pic.twitter.com/ZZn0l7E7WZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1101039210298003456?ref_src=twsrc%5Etfw&#34;&gt;February 28, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;network-graph-for-the-french-city-trains&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Network Graph for the French City Trains&lt;/h1&gt;
&lt;p&gt;Simply drawing a network graph to understand which french cities are mainly urban with capacity to trains arriving and leaving. Cities such as Paris Lyon, Paris Montparnasse, Paris Nord and Paris Est could be cities of concern with much for traffic with related to trains.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(small_trains,aes(from_id=departure_station,to_id=arrival_station))+
          geom_net(directed = TRUE,labelon = TRUE,size=0.5,labelcolour = &amp;quot;black&amp;quot;,
                   repel = FALSE,ecolour = &amp;quot;grey70&amp;quot;, arrowsize = 0.75,
                   linewidth = 0.5,layout.alg = &amp;quot;fruchtermanreingold&amp;quot;)+
          theme_net()+
          ggtitle(&amp;quot;Network Graph Showing from City to City of French Trains&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/network%20graph-1.png&#34; width=&#34;1344&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;paris-montparnasse&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Paris Montparnasse&lt;/h1&gt;
&lt;p&gt;Let me focus on Montparnasse which has lot of trains coming towards and leaving outwards according to the network map. Not all are cities of France according to my observations, where I can see Madrid, Zurich and Barcelona.&lt;/p&gt;
&lt;div id=&#34;chosen-city-with-total-number-of-trips&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chosen City with Total Number of Trips&lt;/h2&gt;
&lt;p&gt;Total number of trips from Paris Montparnasse station to other cities is noted here. Four years of data with more accuracy by months is considered in this plot. There is clear variation in this data for cities.&lt;/p&gt;
&lt;p&gt;Close to 800 trips have been recorded towards the Bordeaux St Jean city but not clearly the same pattern for all years or months as well. Further, St Malo city has the lowest amount of trips compared to other cities in all fours but follows a centered pattern around the 100 mark.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(small_trains,departure_station==&amp;quot;PARIS MONTPARNASSE&amp;quot;),
       aes(x=str_wrap(arrival_station,20),y=total_num_trips,color=month))+
       geom_jitter()+coord_flip()+ labs(color=&amp;quot;Month&amp;quot;)+
       transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
       scale_y_continuous(breaks = seq(0,800,100),labels=seq(0,800,100))+
       xlab(&amp;quot;Arrival Station&amp;quot;)+ylab(&amp;quot;Total Number of Trips&amp;quot;)+
       ggtitle(&amp;quot;Paris Montparnasse and its arrival Stations&amp;quot; ,subtitle =&amp;quot;Year :{frame_time}&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Paris%20Montparnasse%20total%20num%20of%20trips-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chosen-city-with-average-journey-time&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chosen City with Average Journey Time&lt;/h2&gt;
&lt;p&gt;Except year 2017 all cities has similar and centered data points. In this exceptional year of 2017 we can see a difference between the first six months and rest. Where most of the Average journey times have been reduced, it is clear according to year 2018 points.&lt;/p&gt;
&lt;p&gt;City of Toulouse Matabiau has the highest Average Journey Time, while lowest time goes to the city of Le Mans. So what happened after mid of year 2017.&lt;/p&gt;
&lt;p&gt;Maximum Average Journey time before mid of year 2017 is close to 325 but after this period it is centered around 275. The Minimum Average Journey time before mid of year 2017 and after also it is close to 50.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(small_trains,departure_station==&amp;quot;PARIS MONTPARNASSE&amp;quot;),
       aes(x=str_wrap(arrival_station,20),y=journey_time_avg,color=month))+
       geom_jitter()+coord_flip()+ labs(color=&amp;quot;Month&amp;quot;)+
       transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
       scale_y_continuous(breaks=seq(0,350,25),labels=seq(0,350,25))+
       xlab(&amp;quot;Arrival Station&amp;quot;)+ylab(&amp;quot;Average Journey Time&amp;quot;)+
       ggtitle(&amp;quot;Paris Montparnasse and its arrival Station&amp;quot; ,subtitle =&amp;quot;Year :{frame_time}&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Paris%20Montparnasse%20Journey%20time%20average-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chosen-city-with-average-delay-with-all-departing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chosen City with Average Delay with All Departing&lt;/h2&gt;
&lt;p&gt;There is no clear pattern in perspective of months or years because data points are spread all over the place. Yet there is an odd occurring of negative values for average delay with all departing for some cities after mid of year 2017.&lt;/p&gt;
&lt;p&gt;Well none of these negative values does not exceed -2.5, where the maximum average delay in all departing is close to 5.5. I believe unit measured is in minutes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(small_trains,departure_station==&amp;quot;PARIS MONTPARNASSE&amp;quot;),
       aes(x=str_wrap(arrival_station,20),y= avg_delay_all_departing,color=month))+
       geom_jitter()+coord_flip()+ labs(color=&amp;quot;Month&amp;quot;)+
       scale_y_continuous(breaks=seq(-2.5,5.5,0.5),labels=seq(-2.5,5.5,0.5))+
       transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
       geom_hline(yintercept = 0,color=&amp;quot;red&amp;quot;)+
       xlab(&amp;quot;Arrival Station&amp;quot;)+ylab(&amp;quot;Average Delay All Departing&amp;quot;)+
       ggtitle(&amp;quot;Paris Montparnasse and its arrival Station&amp;quot; ,subtitle =&amp;quot;Year :{frame_time}&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Paris%20Montparnasse%20avg%20delay%20all%20departing-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chosen-city-with-average-delay-with-all-arriving&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chosen City with Average Delay with All Arriving&lt;/h2&gt;
&lt;p&gt;Highest delay could occur close to 18 minutes for average delay in Arriving and the lowest is close to -3. only in 2018 we see such negative values. These negative values occurs for the city of St Malo. Also there is no clear pattern in any city with relative to year or months.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(small_trains,departure_station==&amp;quot;PARIS MONTPARNASSE&amp;quot;),
       aes(x=str_wrap(arrival_station,20),y=avg_delay_all_arriving,color=month))+
       geom_jitter()+coord_flip()+ labs(color=&amp;quot;Month&amp;quot;)+
       transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
       geom_hline(yintercept = 0,color=&amp;quot;red&amp;quot;)+
       scale_y_continuous(breaks=seq(-3,18),labels=seq(-3,18))+
       xlab(&amp;quot;Arrival Station&amp;quot;)+ylab(&amp;quot;Average Delay All Arriving&amp;quot;)+
       ggtitle(&amp;quot;Paris Montparnasse and its arrival Station&amp;quot; ,subtitle =&amp;quot;Year :{frame_time}&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Paris%20Montparnasse%20avg%20delay%20all%20arriving-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chosen-city-with-number-of-late-departures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chosen City with Number of Late Departures&lt;/h2&gt;
&lt;p&gt;Number of Late departures over the years increases for all cities. It is more clear for Bordeaux St Jean where the counts go beyond 150 and close to 200 in the year of 2018, but in 2015 the highest point is close to 75 for the same city.&lt;/p&gt;
&lt;p&gt;St Malo has the lowest number of late departures where it fails to reach the count of 30 in all four years.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(small_trains,departure_station==&amp;quot;PARIS MONTPARNASSE&amp;quot;),
       aes(x=str_wrap(arrival_station,20),y=num_late_at_departure,
           color=month))+
       geom_jitter()+coord_flip()+ labs(color=&amp;quot;Month&amp;quot;)+
       scale_y_continuous(breaks=seq(0,200,25),labels=seq(0,200,25))+
       transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
       xlab(&amp;quot;Arrival Station&amp;quot;)+ylab(&amp;quot;Number of Lates at Departure&amp;quot;)+
       ggtitle(&amp;quot;Paris Montparnasse and its arrival Station&amp;quot; ,subtitle =&amp;quot;Year :{frame_time}&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Paris%20Montparnasse%20num%20late%20at%20departure-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;chosen-city-with-number-of-late-arrivals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Chosen City with Number of Late Arrivals&lt;/h2&gt;
&lt;p&gt;City of St Malo has the lowest amount of late arrivals for all fours in general. Most amount of highest late arrivals occur in the city of Bordeaux St Jean. In year 2015 most of these data points are centered towards their specific values. In the next few years we can see that is not the case and they are with a lot of variation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(small_trains,departure_station==&amp;quot;PARIS MONTPARNASSE&amp;quot;),
       aes(x=str_wrap(arrival_station,20),y=num_arriving_late,
           color=month))+
       geom_jitter()+coord_flip()+ labs(color=&amp;quot;Month&amp;quot;)+
       transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
       scale_y_continuous(breaks=seq(0,200,20),labels=seq(0,200,20))+
       xlab(&amp;quot;Arrival Station&amp;quot;)+ylab(&amp;quot;Number of Lates at Arriving&amp;quot;)+
       ggtitle(&amp;quot;Paris Montparnasse and its arrival Station&amp;quot; ,subtitle =&amp;quot;Year :{frame_time}&amp;quot;)

animate(p,nframes=4,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Paris%20Montparnasse%20num%20arriving%20late-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;departure-station-with-average-journey-time-and-total-number-of-trips&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Departure Station with Average Journey Time and Total Number of Trips&lt;/h1&gt;
&lt;p&gt;Summary of this below plot is that when Average Journey Time increases clearly Total Number of Trips will decrease.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(small_trains,aes(x=journey_time_avg,y=total_num_trips,color=month))+
      geom_point()+transition_states(departure_station)+labs(color=&amp;quot;Month&amp;quot;)+
      ggtitle(&amp;quot;Average Journey Time and Total Number of Trips&amp;quot;,
              subtitle=&amp;quot;Departure Station : {closest_state}&amp;quot;)+
      scale_y_continuous(breaks=seq(0,900,50),labels=seq(0,900,50))+
      scale_x_continuous(breaks=seq(0,500,50),labels=seq(0,500,50))+  
      xlab(&amp;quot;Average Journey Time&amp;quot;)+ylab(&amp;quot;Total Number of Trips&amp;quot;)+
      shadow_mark()

animate(p,nframes=59,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/departure%20station%20with%20journey%20time%20avg%20and%20total%20num%20trips-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;departure-station-with-average-delay-all-departing-and-number-of-late-at-departures&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Departure Station with Average Delay All Departing and Number of Late at Departures&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(small_trains,aes(x=num_late_at_departure,y=avg_delay_all_departing,
                           color=month))+
      geom_point()+transition_states(departure_station)+labs(color=&amp;quot;Month&amp;quot;)+
      ggtitle(&amp;quot;Average Delay at All Departing and Number of Lates at Departure&amp;quot;,
              subtitle=&amp;quot;Departure Station : {closest_state}&amp;quot;)+
      geom_vline(xintercept = 0,color=&amp;quot;red&amp;quot;)+
      geom_hline(yintercept = 0,color=&amp;quot;red&amp;quot;)+
      scale_y_continuous(breaks=seq(-5,175,5),labels=seq(-5,175,5))+
      scale_x_continuous(breaks=seq(0,500,50),labels=seq(0,500,50))+  
      xlab(&amp;quot;Number of Lates at Departure&amp;quot;)+ylab(&amp;quot;Average Delays at all Departing&amp;quot;)+
      shadow_mark()

animate(p,nframes=59,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/departure%20station%20with%20Number%20of%20late%20and%20average%20Delay-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;departure-station-with-average-delay-all-arriving-and-number-of-arriving-late&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Departure Station with Average Delay All Arriving and Number of Arriving Late&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(small_trains,aes(x=num_arriving_late,y=avg_delay_all_arriving,
                           color=month))+
      geom_point()+transition_states(departure_station)+labs(color=&amp;quot;Month&amp;quot;)+
      ggtitle(&amp;quot;Average Delay at All Arriving and Number of Lates at Arriving&amp;quot;,
              subtitle=&amp;quot;Departure Station : {closest_state}&amp;quot;)+
      geom_vline(xintercept = 0,color=&amp;quot;red&amp;quot;)+
      geom_hline(yintercept = 0,color=&amp;quot;red&amp;quot;)+
      scale_y_continuous(breaks=seq(-150,40,5),labels=seq(-150,40,5))+
      scale_x_continuous(breaks=seq(0,250,25),labels=seq(0,250,25))+  
      xlab(&amp;quot;Number of Lates at Arriving&amp;quot;)+ylab(&amp;quot;Average Delays at all Arriving&amp;quot;)+
      shadow_mark()

animate(p,nframes=59,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/departure%20station%20with%20Number%20of%20Arriving%20late%20and%20average%20Delay%20arriving-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;delayed-cause-and-delayed-number&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Delayed Cause and Delayed Number&lt;/h1&gt;
&lt;p&gt;Delays caused by the travelers is very less likely to happen, where most of these delays are caused by external causes. Other causes such as rolling stock and rail infrastructure also has effect but not as much from external cause. Station management has limited amount of affect but higher than travelers in causes for delaying trains.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;small_trains %&amp;gt;%
    mutate(delay_cause = str_remove(delay_cause,&amp;quot;delay_cause_&amp;quot;)) %&amp;gt;%
ggplot(.,aes(x=delay_cause,y=delayed_number))+
      xlab(&amp;quot;Delay Cause&amp;quot;)+ylab(&amp;quot;Delayed Number&amp;quot;)+
      ggtitle(&amp;quot;Delayed Causes and Delayed Number as percentage&amp;quot;)+
      geom_jitter()+coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week9/index_files/figure-html/Delayed%20No%20and%20Delayed%20cause-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 8 : Phds Awarded in USA between 2008 and 2017</title>
      <link>/post/tidytuesday2019/week8/week8/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytuesday2019/week8/week8/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#broad-field&#34;&gt;Broad Field&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#all-fields&#34;&gt;All fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dropping-psychology-and-social-sciences&#34;&gt;Dropping Psychology and Social Sciences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-field&#34;&gt;Major Field&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#major-fields-with-box-plot&#34;&gt;Major Fields with Box plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-fields-without-psychology-but-still-in-a-boxplot&#34;&gt;Major Fields without Psychology but still in a Boxplot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mathematics-and-computer-sciences&#34;&gt;Mathematics and Computer Sciences&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#mathematics-and-computer-science-as-a-broad-field&#34;&gt;Mathematics and Computer Science as a Broad field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mathematics-and-computer-science-as-a-major-field&#34;&gt;Mathematics and Computer Science as a Major Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-field-of-mathematics-and-computer-science-but-now-all-fields&#34;&gt;Major Field of Mathematics and Computer Science but now all Fields&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#major-field-field-and-year-for-mathematics-and-computer-sciences&#34;&gt;Major Field, Field and Year For Mathematics and Computer Sciences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load the packages
library(tidyverse)
library(ggthemr)
library(readr)
library(gganimate)
library(ggridges)
library(ggalluvial)

ggthemr(&amp;quot;flat&amp;quot;)

#load the data
phdlist &amp;lt;- read_csv(&amp;quot;phd_by_field.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Five variables are representing this entire data-set and three of them are factors while one column represents the year and the final column is for counts. There are few missing values. We can focus on Phds awarded from 2008 to 2017 in perspective of Broad Field, Major Field and Field.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-02-19&#34;&gt;Dataset&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Amalan-ConStat/TidyTuesday/tree/master/2019/Week8&#34;&gt;GitHub Code&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Computer science PhDs more than others is that the boom of AI. beginning from 2008 itself !!!!!. My first ridge plot and alluvial diagram.&lt;br&gt;Code: &lt;a href=&#34;https://t.co/TtWLzNk1ga&#34;&gt;https://t.co/TtWLzNk1ga&lt;/a&gt;     &lt;a href=&#34;https://twitter.com/hashtag/tidytuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidytuesday&lt;/a&gt; &lt;a href=&#34;https://t.co/AhB01IPuv6&#34;&gt;pic.twitter.com/AhB01IPuv6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amalan Mahendran (@Amalan_Con_Stat) &lt;a href=&#34;https://twitter.com/Amalan_Con_Stat/status/1097868689385418752?ref_src=twsrc%5Etfw&#34;&gt;February 19, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Broad Field and Major Field are considered specially but not the column Field as it would be difficult to plot based on the amount of categories.&lt;/p&gt;
&lt;div id=&#34;broad-field&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Broad Field&lt;/h1&gt;
&lt;p&gt;Broad field has 7 categories and clearly Psychology and social sciences has produced more than 4000 Phds each and every year. Which is twice comparing to other categories. If we drop Psychology and Social sciences, now the changes over the years for other categories are clear.&lt;/p&gt;
&lt;p&gt;There are more outliers in the field of Life sciences where some programs produce more than 1000 Phds each year comparatively to the rest categories. Except Life sciences other categories tend to behave rarely as above producing more than 1000 Phds.&lt;/p&gt;
&lt;p&gt;Engineering field has the lowest distribution with relative to other categories according to the box plot in every year.&lt;/p&gt;
&lt;div id=&#34;all-fields&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;All fields&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(phdlist,aes(x=str_wrap(broad_field,20),y=n_phds))+
          geom_boxplot()+
          xlab(&amp;quot;Broad Field&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
          transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
          ggtitle(&amp;quot;Boxplot to Number of Phds in Broad Field&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
          theme(axis.text.x = element_text(hjust=1,angle = 90))

animate(p,nframes=9,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/Broad%20field%20boxplot-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dropping-psychology-and-social-sciences&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dropping Psychology and Social Sciences&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(phdlist,broad_field != &amp;quot;Psychology and social sciences&amp;quot;),
          aes(x=str_wrap(broad_field,20),y=n_phds))+
          geom_boxplot()+
          xlab(&amp;quot;Broad Field&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
          transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
          ggtitle(&amp;quot;Boxplot to Number of Phds in Broad Field&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
          theme(axis.text.x = element_text(hjust=1,angle = 90))

animate(p,nframes=9,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/Broad%20field%20boxplot%20without%20psy%20and%20soc%20sciences-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;major-field&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Major Field&lt;/h1&gt;
&lt;p&gt;Focus now solely switches towards the Major Field column and here also we can see the strong outlier in Psychology over the years. Further, Physics and Astronomy field also has a very strong outlier where over the years it reaches 2000 Phds.&lt;/p&gt;
&lt;p&gt;Without dropping Psychology we can see the odd behavior from the fields “Education Research”, “Economics” and “Computer and Information Sciences”. Specially the gradual decrease of “Education Research” from 2008 to 2017.&lt;/p&gt;
&lt;p&gt;Also in “Computer and Information Sciences” field there is an odd increase in 2012.&lt;/p&gt;
&lt;p&gt;After dropping the “Psychology” field we can now clearly see how other Major fields behave over the years.&lt;/p&gt;
&lt;div id=&#34;major-fields-with-box-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Major Fields with Box plot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(phdlist,aes(x=str_wrap(major_field,20),y=n_phds,fill=broad_field))+
          geom_boxplot()+coord_flip()+
          xlab(&amp;quot;Major Field&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
          transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
          ggtitle(&amp;quot;Boxplot to Number of Phds in Major Field&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
          theme(axis.text.x = element_text(hjust=1,angle = 90),
                legend.position = &amp;quot;bottom&amp;quot;)+
          labs(fill=&amp;quot;Broad Field&amp;quot;)

animate(p,nframes=9,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/major%20field%20boxplot-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-fields-without-psychology-but-still-in-a-boxplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Major Fields without Psychology but still in a Boxplot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;q&amp;lt;-ggplot(subset(phdlist,major_field != &amp;quot;Psychology&amp;quot;),
          aes(x=str_wrap(major_field,20),y=n_phds,fill=broad_field))+
          geom_boxplot()+coord_flip()+
          xlab(&amp;quot;Major Field&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
          transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
          ggtitle(&amp;quot;Boxplot to Number of Phds in Major Field&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
          theme(axis.text.x = element_text(hjust=1,angle = 90),
                legend.position = &amp;quot;bottom&amp;quot;)+
          labs(fill=&amp;quot;Broad Field&amp;quot;)

animate(q,nframes=9,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/Major%20field%20without%20psy-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mathematics-and-computer-sciences&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mathematics and Computer Sciences&lt;/h1&gt;
&lt;p&gt;I am a Statistics student with a glimpse of Computer science background, therefore my next intention is to focus on the Broad Field “Mathematics and Compute Sciences”.&lt;/p&gt;
&lt;div id=&#34;mathematics-and-computer-science-as-a-broad-field&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mathematics and Computer Science as a Broad field&lt;/h2&gt;
&lt;p&gt;Mathematics and Statistics has a gradual increase until 2012, but wavers higher and lower in the next years, but in 2016 there is a sudden increase of which would lead to around 700 Phds awarded. Next year this decreases to 500 Phds.&lt;/p&gt;
&lt;p&gt;Comparing the 2 major fields “Computer and Information Sciences” with “Mathematics and Statistics” indicate the strong gap between them awarding Phds. “Computer and Information Sciences” award more than twice the amount of Phds what “Mathematics and Statistics” award each year.&lt;/p&gt;
&lt;p&gt;“Computer and Information Sciences” also hold a clear pattern with the Phds awarded.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;subset(phdlist,broad_field == &amp;quot;Mathematics and computer sciences&amp;quot;) %&amp;gt;%
      
ggplot(.,aes(x=factor(year),y=n_phds,fill=major_field))+
       geom_bar(stat=&amp;quot;identity&amp;quot;,position = &amp;quot;dodge&amp;quot;)+
       theme(legend.position = &amp;quot;bottom&amp;quot;)+
       xlab(&amp;quot;Major Field&amp;quot;)+ylab(&amp;quot;Number of Phds&amp;quot;)+
       ggtitle(&amp;quot;Number of Phds awarded under Mathematics and CS&amp;quot;,
               subtitle = &amp;quot;Year : 2008 to 2017&amp;quot;)+
      scale_y_continuous(breaks=seq(0,1700,100),labels=seq(0,1700,100))+
          labs(fill=&amp;quot;Major Field&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/mathematics%20and%20cs%20bar%20chart-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mathematics-and-computer-science-as-a-major-field&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mathematics and Computer Science as a Major Field&lt;/h2&gt;
&lt;p&gt;Box plot indicates the clear variation among these two major fields over years which could be used for comparison. The sudden peak in year 2012 for “Computer and Information Sciences” interests me alot. It should be noted that “Mathematics and Statistics” has more outliers than “Computer and Information Sciences”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(phdlist,broad_field == &amp;quot;Mathematics and computer sciences&amp;quot;),
          aes(x=str_wrap(major_field,20),y=n_phds))+
          geom_boxplot()+
          xlab(&amp;quot;Major Field&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
          transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
          ggtitle(&amp;quot;Boxplot to Number of Phds in Major Field&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)

animate(p,nframes=9,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/major%20field%20boxplot%20with%20maths%20and%20cs-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;Below is a ridge plot to describe the same thing which would clearly indicate the data spread.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(subset(phdlist,broad_field == &amp;quot;Mathematics and computer sciences&amp;quot;),
          aes(y=str_wrap(major_field,20),x=n_phds))+
          geom_density_ridges()+
          xlab(&amp;quot;No of Phds&amp;quot;)+ ylab(&amp;quot;Major Field&amp;quot;)+
          theme(legend.position = &amp;quot;bottom&amp;quot;)+
          ggtitle(&amp;quot;Ridge plot for Major Fields in Mathematics and Computer Sciences&amp;quot;,
                  subtitle = &amp;quot;Year : 2008 to 2017&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/ridge%20major%20fields-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;major-field-of-mathematics-and-computer-science-but-now-all-fields&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Major Field of Mathematics and Computer Science but now all Fields&lt;/h2&gt;
&lt;p&gt;Considering the sub categories of the chosen broad field in a box plot did not work quite well, but clearly this plot indicates the Computer Science Phds being awarded with highest amount over the years. Would that mean the boom of Artificial Intelligence in Computer Science.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-ggplot(subset(phdlist,broad_field == &amp;quot;Mathematics and computer sciences&amp;quot;),
          aes(x=str_wrap(field,20),y=n_phds,fill=major_field))+
          geom_boxplot()+coord_flip()+
          xlab(&amp;quot;Field&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
          transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
          ggtitle(&amp;quot;Boxplot to Number of Phds in Field&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
          theme(legend.position = &amp;quot;bottom&amp;quot;)+
          labs(fill=&amp;quot;Major Field&amp;quot;)

animate(p,nframes=9,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/field%20boxplot%20with%20maths%20and%20cs-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;To get a clear view here is the ridge plot, where Computer Science is very strong for “Computer and Information Sciences”. It should be noted though there is only three other fields in this major field which are “Information Science systems”, “Computer and Information Sciences, other” and “Computer and Information sciences, general”.&lt;/p&gt;
&lt;p&gt;More than 10 fields for the Major field “Mathematics and Statistics”, where higher counts occur to “Statistics(Mathematics)”, “Applied mathematics” and “Mathematics and Statistics,general”. Still non of these fields have passed the 1000 Phds awarded mark.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(subset(phdlist,broad_field == &amp;quot;Mathematics and computer sciences&amp;quot;),
          aes(y=str_wrap(field,20),x=n_phds,fill=major_field))+
          geom_density_ridges()+
          xlab(&amp;quot;No of Phds&amp;quot;)+ ylab(&amp;quot;Field&amp;quot;)+
          theme(legend.position = &amp;quot;bottom&amp;quot;)+
          ggtitle(&amp;quot;Ridge plot for Fields in Mathematics and Computer Sciences&amp;quot;,
                  subtitle = &amp;quot;Year : 2008 to 2017&amp;quot;)+
          labs(fill=&amp;quot;Major Field&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/ridge%20plot%20fields-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;major-field-field-and-year-for-mathematics-and-computer-sciences&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Major Field, Field and Year For Mathematics and Computer Sciences&lt;/h1&gt;
&lt;p&gt;Finally an alluvial diagram just to look at the impact of Computer science field with respective to each year, which is very strong.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(subset(phdlist,broad_field==&amp;quot;Mathematics and computer sciences&amp;quot;)) %&amp;gt;%
           na.omit() %&amp;gt;%
ggplot(.,aes(axis2=factor(str_wrap(year,10)), axis1= factor(str_wrap(major_field,10)), 
             axis3= factor(field), y=as.numeric(n_phds)))+
       scale_x_discrete(limits=c(&amp;quot;Major Field&amp;quot;,&amp;quot;Year&amp;quot;,&amp;quot;Field&amp;quot;),expand = c(.05, .05))+
       geom_alluvium(aes(fill=factor(major_field)),width = 1/2)+
       geom_stratum(width=1/2,fill=&amp;quot;white&amp;quot;,color=&amp;quot;grey&amp;quot;)+
       geom_text(stat = &amp;quot;stratum&amp;quot;, label.strata = TRUE)+
       theme(legend.position = &amp;quot;bottom&amp;quot;)+ylab(&amp;quot;No of Phds&amp;quot;)+
       ggtitle(&amp;quot;Major Field and Fields For Years 2008 to 2017&amp;quot;,
               subtitle=&amp;quot;Mathematics and Computer Science&amp;quot;)+
          labs(fill=&amp;quot;Major Field&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/TidyTuesday2019/Week8/index_files/figure-html/broad%20and%20major%20and%20field-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sri Lanka and its affect on/in Journal Articles </title>
      <link>/post/slandjournal/slandjournal/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/slandjournal/slandjournal/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#packages-and-ideas&#34;&gt;Packages and Ideas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#country-information&#34;&gt;Country Information&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ranking-of-sri-lanka-from-1996-to-2017&#34;&gt;Ranking of Sri Lanka from 1996 to 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ranking-of-south-asian-region-countries-from-1996-to-2017&#34;&gt;Ranking of South Asian Region Countries from 1996 to 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#documents-citable-documents-and-self-citations-from-sri-lanka-journals&#34;&gt;Documents , Citable Documents and Self Citations from Sri Lanka Journals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#citations-per-document-from-sri-lankan-journals&#34;&gt;Citations per Document from Sri Lankan Journals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#journals-from-sri-lanka&#34;&gt;Journals from Sri Lanka&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#rank-changes-for-sri-lankan-journals&#34;&gt;Rank changes for Sri Lankan Journals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sjr-values-changing-for-sri-lankan-journals&#34;&gt;SJR values changing for Sri Lankan Journals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references-per-document-changing-for-sri-lankan-journals&#34;&gt;References per Document changing for Sri Lankan Journals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#publishers-and-journals-from-sri-lanka&#34;&gt;Publishers and Journals from Sri Lanka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#total-documents-and-references-for-journals-from-sri-lanka&#34;&gt;Total Documents and References for Journals from Sri Lanka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#three-year-time-period-for-journals-from-sri-lanka&#34;&gt;Three year time period for Journals from Sri Lanka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#journals-and-categories&#34;&gt;Journals and categories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;“SCImago Journal and Country Rank provides valuable estimates of academic journals’ prestige.”, this is according to its GitHub repository which could be found &lt;a href=&#34;https://github.com/ikashnitsky/sjrdata&#34;&gt;here.&lt;/a&gt; I completely agree with this statement, last year(2018) while searching for journals to publish a research of my interest and contribution this &lt;a href=&#34;https://www.scimagojr.com/&#34;&gt;website&lt;/a&gt; came in useful comparative to most of my Google searches.&lt;/p&gt;
&lt;p&gt;It is crucial to find a journal which summarizes the research work we intend to contribute with more relative information such as ranking, h-index, citations and etc which could be compared for our benefit. Usually people tend to collect information by themselves and might miss a valuable and more suitable opportunity to publish because they did not know where to find them. That will not occur if you use SciMagoJr.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;packages-and-ideas&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages and Ideas&lt;/h1&gt;
&lt;p&gt;As a Researcher from Sri Lanka I am much more interested in how we as a country has made progress in related to journals or research publishing in perspective of our neighboring countries and fields of research interest.&lt;/p&gt;
&lt;p&gt;The package sjrdata has three data-sets and they provide information regarding to journals which is mostly seeked by researchers to find an appropriate place to publish their research or find places which would benefit them in finding a unique research problem.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Data
library(sjrdata)

# Packages
library(tidyverse)
library(gganimate)
library(ggrepel)
library(magrittr)
library(lubridate)
library(splitstackshape)
library(qdap)
library(ggthemr)
ggthemr(&amp;quot;flat dark&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The three data-sets in concern are&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;sjr_countries - Contains information regarding h_index over the years for countries and their ranks with other information related to documents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sjr_journals - Records for type of document with their basic information which can be connected to country of origin, publisher and fields of interest and much more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sjr_countries_1996_2017 - Similar to sjr_countries but this is an accumulation of the data-set which would indicate the overall performance as a country from 1996 to 2017.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;country-information&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Country Information&lt;/h1&gt;
&lt;p&gt;This section will simply scrutinize how Sri Lanka over the years has performed and it should be noted that only the ranks of South Asian Region countries will be compared for the purpose of understanding the progress as a whole community.&lt;/p&gt;
&lt;div id=&#34;ranking-of-sri-lanka-from-1996-to-2017&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ranking of Sri Lanka from 1996 to 2017&lt;/h2&gt;
&lt;p&gt;Sri Lanka(SL) had its ups and downs in the rankings where the worst place was to be in 85th and the best place to be in 75th. As of in 2017 it has reached 78th which is good considering the previous three years(2014-2016) the ranks were higher.&lt;/p&gt;
&lt;p&gt;In 1996 SL was holding 85th and this occurs again in the years 2011 and 2014. Also it reached the 75th ranking position in year 2007. I sincerely hope that in the coming years SL would reach better ranks.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;subset(sjr_countries,country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
  mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=year,y=rank,label=rank))+
  geom_point()+geom_line()+
  geom_text_repel()+
  xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Rank&amp;quot;)+
  ggtitle(&amp;quot;Rank of Sri Lanka Changing from 1996 to 2017&amp;quot;)+
  theme(axis.text.x =element_text(angle = 45, hjust = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/sjr%20Sri%20Lanka%20and%20rank-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ranking-of-south-asian-region-countries-from-1996-to-2017&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ranking of South Asian Region Countries from 1996 to 2017&lt;/h2&gt;
&lt;p&gt;India is way ahead of other seven countries in the South Asian region where it has gradually moved from 13th position to 5th over the years. Sri Lanka is currently behind India, Pakistan and Nepal.&lt;/p&gt;
&lt;p&gt;Further Bhutan, Maldives and Afghanistan have ranks above 130 for the period of time given, while Maldives has stayed in the range of 213 and 167. Afghanistan and Bhutan have made improvements where now(2017) they are holding ranks of 136 and 159 respectively while in 1996 they had ranks of 207 and 186. These three countries tend to oscillate very frequently among ranks than the other 5 countries in the region.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;subset(sjr_countries,
       country ==&amp;quot;Sri Lanka&amp;quot; | country==&amp;quot;India&amp;quot;| country==&amp;quot;Pakistan&amp;quot;|
       country ==&amp;quot;Nepal&amp;quot; | country== &amp;quot;Maldives&amp;quot; | country ==&amp;quot;Afghanistan&amp;quot;|
       country == &amp;quot;Bhutan&amp;quot; | country==&amp;quot;Bangladesh&amp;quot;) %&amp;gt;%
       mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=year,y=rank,label=rank,color=country))+
  geom_point()+geom_line()+
  geom_text_repel()+
  xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Rank&amp;quot;)+
  ggtitle(&amp;quot;Rank of South Asian Region Changing from 1996 to 2017&amp;quot;)+
  theme(axis.text.x =element_text(angle = 45, hjust = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/sjr%20South%20Asia%20and%20rank-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;documents-citable-documents-and-self-citations-from-sri-lanka-journals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Documents , Citable Documents and Self Citations from Sri Lanka Journals&lt;/h2&gt;
&lt;p&gt;Over the years Self citations were higher than citable documents and documents in counts, but this is not the case after the year 2012. Self citations reached its highest peak of 1331 in 2012 but in the next few years they gradually decreased to 175 counts in year 2017. Even though in 1996 the self citations count was 275 which is higher than current counts in 2017 for self citation.&lt;/p&gt;
&lt;p&gt;This is not the case for citable documents and documents where they start with counts of close to 200. Over the years they rapidly increase and reach the close to thousand mark 2012. This form of improvement continues further and reaches the close to two thousand mark in the year 2017, which I feel is impressive. The gap between documents and citable documents is very thin in the early 2000s but while counts increase the gap also considerably increases.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sjr_countries%&amp;gt;%
  gather(citing,values,&amp;quot;documents&amp;quot;,&amp;quot;citable_documents&amp;quot;,&amp;quot;self_citations&amp;quot;) %&amp;gt;%
  subset(country==&amp;quot;Sri Lanka&amp;quot;,select=c(citing,values,year)) %&amp;gt;%
  mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=year,y=values,label=values,color=citing,shape=citing))+
  geom_point()+geom_line()+
  geom_text_repel()+
  xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Counts&amp;quot;)+
  scale_x_continuous(breaks=seq(1996,2017),labels=seq(1996,2017))+
  scale_y_continuous(breaks=seq(0,2000,100),labels=seq(0,2000,100))+
  ggtitle(&amp;quot;Document Counts Changing from 1996 to 2017 for Sri Lanka&amp;quot;)+
  theme(axis.text.x =element_text(angle = 90, hjust = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/sjr%20Sri%20Lanka%20and%20documents%20citable%20documents%20self%20citations-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;citations-per-document-from-sri-lankan-journals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Citations per Document from Sri Lankan Journals&lt;/h2&gt;
&lt;p&gt;Citations per document has a steady rise from 14.28 to 24.29 in the years of 1996 to 2000, while there is a sudden decline next year it manages to increases and reach the peak point of 29.29 in year 2003. After the millenium we can clearly see a clear steep in numbers over the next two decades, where now in year 2017 the citations per document has dropped to 0.61. It is very alarming even though we have alot of citable documents in the same year according to the previous plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sjr_countries %&amp;gt;%
   subset(country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
   mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=year,y=citations_per_document,
          label=citations_per_document))+
  geom_point()+geom_line()+
  geom_text_repel()+
  xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Citations Per Document&amp;quot;)+
  scale_x_continuous(breaks=seq(1996,2017),labels=seq(1996,2017))+
  scale_y_continuous(breaks=seq(0,30),labels=seq(0,30))+
  ggtitle(&amp;quot;Citations Per Document from 1996 to 2017 for Sri Lanka&amp;quot;)+
  theme(axis.text.x =element_text(angle = 90, hjust = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/sjr%20citations%20per%20document-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;journals-from-sri-lanka&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Journals from Sri Lanka&lt;/h1&gt;
&lt;p&gt;9 titles are listed and considered here from Sri Lanka where some began publishing recently.&lt;/p&gt;
&lt;div id=&#34;rank-changes-for-sri-lankan-journals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Rank changes for Sri Lankan Journals&lt;/h2&gt;
&lt;p&gt;Journals which started close to year 2000 have ranks close to ten thousand, while recent publications has ranks leading upto the rank of higher than thirty thousand as well. Journal of the National Science Foundation of Sri Lanka and Ceylon Medical Journal has published more than other publications and they do have better rankings through out the years.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(sjr_journals,country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
   mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
   ggplot(.,aes(x=str_wrap(factor(title),30),y=rank,color=year))+
         geom_jitter()+coord_flip()+
         shadow_mark()+
         transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
         xlab(&amp;quot;Title of Journals&amp;quot;)+ylab(&amp;quot;Rank&amp;quot;)+
         ggtitle(&amp;quot;Ranks Changing over time for Sri Lankan Journals from 1999 to 2017&amp;quot;,
                 subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)

animate(p,fps=1,nframes=18)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/rank%20changes-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sjr-values-changing-for-sri-lankan-journals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;SJR values changing for Sri Lankan Journals&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(sjr_journals,country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
   mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
   ggplot(.,aes(x=str_wrap(factor(title),30),y=sjr,color=year,shape=sjr_best_quartile))+
         geom_jitter()+coord_flip()+
         shadow_mark()+
         labs(shape=&amp;quot;SJR Best Q&amp;quot;)+
         transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
         xlab(&amp;quot;Title of Journals&amp;quot;)+ylab(&amp;quot;SJR values&amp;quot;)+
         ggtitle(&amp;quot;SJR values Changing over time for Sri Lankan Journals from 1999 to 2017&amp;quot;,
                 subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
         theme(legend.position = &amp;quot;bottom&amp;quot;)

animate(p,fps=1,nframes=18)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/sjr%20changes-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references-per-document-changing-for-sri-lankan-journals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;References per Document changing for Sri Lankan Journals&lt;/h2&gt;
&lt;p&gt;Highest amount of reference per document is close to 100 while the minimum is close to zero. There is no specific pattern over the years which indicate an increase or decrease.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(sjr_journals,country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
   mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
   ggplot(.,aes(x=str_wrap(factor(title),30),y=ref_doc,color=year))+
         geom_jitter()+coord_flip()+
         shadow_mark()+
         transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
         xlab(&amp;quot;Title of Journals&amp;quot;)+ylab(&amp;quot;References per Document&amp;quot;)+
         ggtitle(&amp;quot;References per Document Changing over time for Sri Lankan Journals from 1999 to 2017&amp;quot;,
                 subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)

animate(p,fps=1,nframes=18)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/ref%20per%20doc%20changes-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;publishers-and-journals-from-sri-lanka&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Publishers and Journals from Sri Lanka&lt;/h2&gt;
&lt;p&gt;Without any hesitation I could say most of these publications are from the field of medicine and institutions related to medicine. There are some publishers such as Internations Centre for Ethnic Studies and International Irrigation Managament Institue, but they have published very few publications.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-subset(sjr_journals,country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
   mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
   ggplot(.,aes(x=str_wrap(factor(title),30),y=str_wrap(factor(publisher),30),color=year))+
   geom_jitter()+
   transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
   shadow_mark()+
   xlab(&amp;quot;Title&amp;quot;)+ylab(&amp;quot;Publisher&amp;quot;)+
   theme(axis.text.x =element_text(angle = 90, hjust = 1))+
   ggtitle(&amp;quot;Title and Publishers changing over time for Sri Lankan Journals from 1999 to 2017&amp;quot;,
           subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)

animate(p,fps=1,nframes=18) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/publisher%20and%20Journals-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;total-documents-and-references-for-journals-from-sri-lanka&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Total Documents and References for Journals from Sri Lanka&lt;/h2&gt;
&lt;p&gt;The Gaps between Total documents per year and Total references are compared here. Obviously in most of the cases Total documents per year is very low considering to Total references. There are anomalies such as Ceylon Medical Journal but only in the earlier publications.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-sjr_journals %&amp;gt;%
    gather(Group,values,&amp;quot;total_docs_year&amp;quot;,&amp;quot;total_refs&amp;quot;) %&amp;gt;%
    subset(country==&amp;quot;Sri Lanka&amp;quot;,select=c(Group,values,year,title)) %&amp;gt;%
    mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=str_wrap(factor(title),30),y=values,fill=Group,group=Group))+
      geom_col(position = &amp;quot;dodge&amp;quot;)+
      coord_flip()+
      xlab(&amp;quot;Title&amp;quot;)+ylab(&amp;quot;Count&amp;quot;)+
      transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
      ggtitle(&amp;quot;Counts changing for Sri Lankan Journals from 1999 to 2017&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
      theme(legend.position=&amp;quot;bottom&amp;quot;)

animate(p,nframes=18,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/tot%20doc%20and%20ref-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;three-year-time-period-for-journals-from-sri-lanka&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Three year time period for Journals from Sri Lanka&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-sjr_journals %&amp;gt;%
    gather(Group,values,&amp;quot;total_docs_3years&amp;quot;,&amp;quot;total_cites_3years&amp;quot;,&amp;quot;citable_docs_3years&amp;quot;) %&amp;gt;%
    subset(country==&amp;quot;Sri Lanka&amp;quot;,select=c(Group,values,year,title)) %&amp;gt;%
    mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=str_wrap(factor(title),30),y=values,fill=Group,group=Group))+
      geom_col(position=&amp;quot;dodge&amp;quot;)+coord_flip()+
      xlab(&amp;quot;Title&amp;quot;)+ylab(&amp;quot;Count for 3 years&amp;quot;)+
      transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
      ggtitle(&amp;quot;Counts changing for Sri Lankan Journals from 1999 to 2017&amp;quot;,
              subtitle = &amp;quot;Year : {round(frame_time)}&amp;quot;)+
      theme(legend.position=&amp;quot;bottom&amp;quot;)

animate(p,nframes=18,fps=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/3%20doc%20cite%20citable%20year-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;journals-and-categories&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Journals and categories&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&amp;lt;-sjr_journals %&amp;gt;%
      subset(country==&amp;quot;Sri Lanka&amp;quot;) %&amp;gt;%
      select(year,title,categories) %&amp;gt;%
      cSplit(&amp;quot;categories&amp;quot;,sep=&amp;quot;;&amp;quot;) %&amp;gt;%
      gather(Groups,Categories,&amp;quot;categories_1&amp;quot;,&amp;quot;categories_2&amp;quot;,&amp;quot;categories_3&amp;quot;,&amp;quot;categories_4&amp;quot;) %&amp;gt;%
      mutate(Categories=genX(Categories,&amp;quot;(Q&amp;quot;,&amp;quot;)&amp;quot;)) %&amp;gt;%
      mutate(year=year(as.Date(year,&amp;quot;%Y&amp;quot;))) %&amp;gt;%
ggplot(.,aes(x=str_wrap(factor(title),30),y=str_wrap(Categories,30),shape=Groups,color=year)) +
      geom_jitter()+ 
      theme(axis.text.x =element_text(angle = 90, hjust = 1),
            legend.position=&amp;quot;bottom&amp;quot;)+
      transition_time(year)+ease_aes(&amp;quot;linear&amp;quot;)+
      xlab(&amp;quot;Title&amp;quot;)+ ylab(&amp;quot;Categories&amp;quot;)+shadow_mark()+
      ggtitle(&amp;quot;Title and Categories between the years 1999 to 2017&amp;quot;,
              subtitle=&amp;quot;Year :{round(frame_time)}&amp;quot;)

animate(p,nframes=18,fps=1)             &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/SLandJournal/index_files/figure-html/journals%20and%20categories-1.gif&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THANK YOU&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
